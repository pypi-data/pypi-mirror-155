# -*- coding: utf-8 -*-

#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements. See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership. The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License. You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing,
#   software distributed under the License is distributed on an
#   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#   KIND, either express or implied. See the License for the
#   specific language governing permissions and limitations
#   under the License.

# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: LogManagementService.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2
import custos.server.core.LoggingService_pb2 as LoggingService__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='LogManagementService.proto',
  package='org.apache.custos.log.management.service',
  syntax='proto3',
  serialized_options=b'P\001Z\004./pb',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x1aLogManagementService.proto\x12(org.apache.custos.log.management.service\x1a\x1cgoogle/api/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x14LoggingService.proto2\xee\x03\n\x14LogManagementService\x12\x95\x01\n\x0cgetLogEvents\x12\x32.org.apache.custos.logging.service.LogEventRequest\x1a,.org.apache.custos.logging.service.LogEvents\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/log-management/v1.0.0/logs\x12\xa0\x01\n\x0cisLogEnabled\x12>.org.apache.custos.logging.service.LoggingConfigurationRequest\x1a).org.apache.custos.logging.service.Status\"%\x82\xd3\xe4\x93\x02\x1f\x12\x1d/log-management/v1.0.0/status\x12\x9a\x01\n\x06\x65nable\x12>.org.apache.custos.logging.service.LoggingConfigurationRequest\x1a).org.apache.custos.logging.service.Status\"%\x82\xd3\xe4\x93\x02\x1f\"\x1d/log-management/v1.0.0/statusB\x08P\x01Z\x04./pbb\x06proto3'
  ,
  dependencies=[google_dot_api_dot_annotations__pb2.DESCRIPTOR,google_dot_protobuf_dot_empty__pb2.DESCRIPTOR,google_dot_protobuf_dot_struct__pb2.DESCRIPTOR,LoggingService__pb2.DESCRIPTOR,])



_sym_db.RegisterFileDescriptor(DESCRIPTOR)


DESCRIPTOR._options = None

_LOGMANAGEMENTSERVICE = _descriptor.ServiceDescriptor(
  name='LogManagementService',
  full_name='org.apache.custos.log.management.service.LogManagementService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=184,
  serialized_end=678,
  methods=[
  _descriptor.MethodDescriptor(
    name='getLogEvents',
    full_name='org.apache.custos.log.management.service.LogManagementService.getLogEvents',
    index=0,
    containing_service=None,
    input_type=LoggingService__pb2._LOGEVENTREQUEST,
    output_type=LoggingService__pb2._LOGEVENTS,
    serialized_options=b'\202\323\344\223\002\035\022\033/log-management/v1.0.0/logs',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='isLogEnabled',
    full_name='org.apache.custos.log.management.service.LogManagementService.isLogEnabled',
    index=1,
    containing_service=None,
    input_type=LoggingService__pb2._LOGGINGCONFIGURATIONREQUEST,
    output_type=LoggingService__pb2._STATUS,
    serialized_options=b'\202\323\344\223\002\037\022\035/log-management/v1.0.0/status',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='enable',
    full_name='org.apache.custos.log.management.service.LogManagementService.enable',
    index=2,
    containing_service=None,
    input_type=LoggingService__pb2._LOGGINGCONFIGURATIONREQUEST,
    output_type=LoggingService__pb2._STATUS,
    serialized_options=b'\202\323\344\223\002\037\"\035/log-management/v1.0.0/status',
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_LOGMANAGEMENTSERVICE)

DESCRIPTOR.services_by_name['LogManagementService'] = _LOGMANAGEMENTSERVICE

# @@protoc_insertion_point(module_scope)
