[metadata]
name = ics2todoist
friendly_name = iCalendar to Todoist CSV
version = attr: ics2todoist.__version__
description = Convert iCalendar tasks to CSV for import into Todoist.
long_description = file: README.rst
license = MIT License
license_files = LICENSE.txt
author = Kevin Locke
author_email = kevin@kevinlocke.name
copyright = Copyright 2019-2022 Kevin Locke <kevin@kevinlocke.name>
url = https://gitlab.com/kevinoid/ics2todoist
project_urls = 
	Documentation = https://ics2todoist.readthedocs.io/
	Source = https://gitlab.com/kevinoid/ics2todoist
	Tracker = https://gitlab.com/kevinoid/ics2todoist/-/issues
classifiers = 
	Development Status :: 4 - Beta
	Intended Audience :: Information Technology
	License :: OSI Approved :: MIT License
	Operating System :: OS Independent
	Programming Language :: Python
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3.7
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: 3.9
	Programming Language :: Python :: 3.10
	Programming Language :: Python :: Implementation :: CPython
	Programming Language :: Python :: Implementation :: PyPy
	Topic :: Office/Business :: Groupware
	Topic :: Office/Business :: Scheduling
	Topic :: Text Processing
	Topic :: Utilities
keywords = converter csv ical icalendar todoist

[options]
zip_safe = True
package_dir = 
	= src
py_modules = ics2todoist
python_requires = >=3.7

[options.entry_points]
console_scripts = 
	ics2todoist = ics2todoist:main

[options.extras_require]
argcomplete = 
	argcomplete ~= 2.0

[options.packages.find]
exclude = 
	tests
where = src

[aliases]
test = pytest

[flake8]
exclude = 
	*.egg,
	.eggs,
	.git,
	.tox,
	.venv,
	.vulture,
	__pycache__,
	dist,
ignore = 
	W503,
max-line-length = 80
per-file-ignores = 
	test_*.py:D101,D102,D103,D105,D107
rst-directives = 
	alias, py:alias,
	attribute, py:attribute,
	class, py:class,
	classmethod, py:classmethod,
	cmdoption, py:cmdoption,
	concept, py:concept,
	currentmodule, py:currentmodule,
	data, py:data,
	decorator, py:decorator,
	decoratormethod, py:decoratormethod,
	directive, py:directive,
	directive:option, py:directive:option,
	enum, py:enum,
	enum-class, py:enum-class,
	enum-struct, py:enum-struct,
	enumerator, py:enumerator,
	envvar, py:envvar,
	exception, py:exception,
	function, py:function,
	glossary, py:glossary,
	macro, py:macro,
	member, py:member,
	method, py:method,
	module, py:module,
	namespace, py:namespace,
	namespace-pop, py:namespace-pop,
	namespace-push, py:namespace-push,
	option, py:option,
	productionlist, py:productionlist,
	program, py:program,
	property, py:property,
	role, py:role,
	staticmethod, py:staticmethod,
	struct, py:struct,
	type, py:type,
	union, py:union,
	var, py:var,
rst-roles = 
	any, py:any,
	attr, py:attr,
	class, py:class,
	concept, py:concept,
	const, py:const,
	data, py:data,
	dir, py:dir,
	doc, py:doc,
	enum, py:enum,
	enumerator, py:enumerator,
	envvar, py:envvar,
	exc, py:exc,
	expr, py:expr,
	func, py:func,
	keyword, py:keyword,
	macro, py:macro,
	member, py:member,
	meth, py:meth,
	mod, py:mod,
	numref, py:numref,
	obj, py:obj,
	option, py:option,
	ref, py:ref,
	role, py:role,
	struct, py:struct,
	term, py:term,
	texpr, py:texpr,
	token, py:token,
	type, py:type,
	union, py:union,
	var, py:var

[pycodestyle]
max_line_length = 80

[egg_info]
tag_build = 
tag_date = 0

