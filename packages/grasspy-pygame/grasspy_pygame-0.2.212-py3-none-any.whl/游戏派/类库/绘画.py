导入 pygame
从 游戏派.类库.区块 导入 区块类
类 绘画汉化类():


    套路 矩形(自身,表层, 颜色, 区块,边框=0)->区块类:
        '''绘制一个矩形
        <边框>边框<0时,不绘制图形;边框=0时,无边框矩形;边框>0时,只有边框的矩形
        返回一个区块
        '''
        返回 区块类(pygame.draw.rect(表层.surface, 颜色, 区块,边框))

    套路 多边形(自身,表层, 颜色,顶点集,边框=0)->区块类:
        '''绘制一个多边形
        <顶点集>绘制多边形的多个顶点
        返回一个区块
        '''
        返回 区块类(pygame.draw.polygon(表层.surface, 颜色, 顶点集,边框))

    套路 圆(自身,表层, 颜色,圆心点,半径,边框=0)->区块类:
        '''绘制一个圆
        返回一个区块
        '''
        返回 区块类(pygame.draw.circle(表层.surface, 颜色,圆心点,半径,边框))

    套路 椭圆(自身,表层, 颜色,区块,边框=0)->区块类:
        '''绘制一个椭圆
        返回一个区块
        '''
        返回 区块类(pygame.draw.ellipse(表层.surface, 颜色,区块,边框))

    套路 圆弧(自身,表层,颜色,区块,开始角度,结束角度,边框=1)->区块类:
        '''绘制一个弧形,椭圆一部分
        返回一个区块
        '''
        返回 区块类(pygame.draw.arc(表层.surface,颜色,区块,开始角度,结束角度,边框))

    套路 直线(自身,表层,颜色,开始点,结束点,边框=1)->区块类:
        '''绘制一条直线
        返回一个区块
        '''
        返回 区块类(pygame.draw.line(表层.surface,颜色,开始点,结束点,边框))

    套路 抗锯齿直线(自身,表层,颜色,开始点,结束点,边框=1)->区块类:
        '''绘制一条直线
        返回一个区块
        '''
        返回 区块类(pygame.draw.aaline(表层.surface,颜色,开始点,结束点,边框))

    套路 折线(自身,表层,颜色,闭合状态,点集,边框=1)->区块类:
        '''绘制一条由点集控制的折线,
        <闭合状态>为True,绘制一个闭合的多边形;为False,不闭合拆线
        返回一个区块
        '''
        返回 区块类(pygame.draw.lines(表层.surface,颜色,闭合状态,点集,边框))

    套路 抗锯齿折线(自身,表层,颜色,闭合状态,点集,边框=1)->区块类:
        '''绘制一条由点集控制的搞锯齿折线,
        <闭合状态>为True,绘制一个闭合的搞锯齿多边形;为False,不闭合搞锯齿拆线
        返回一个区块
        '''
        返回 区块类(pygame.draw.aalines(表层.surface,颜色,闭合状态,点集,边框))