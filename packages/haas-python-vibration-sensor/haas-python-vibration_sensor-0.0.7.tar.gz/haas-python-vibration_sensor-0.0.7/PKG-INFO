Metadata-Version: 2.1
Name: haas-python-vibration_sensor
Version: 0.0.7
Summary: This is vibration_sensor driver for HaaS Python. HaaS Python is forked from micropython.
Home-page: https://haas.iot.aliyun.com/?from=corp
Author: HaaS Python
Author-email: yinsuo.mys@alibaba-inc.com
License: Apache License, Version 2.0
Project-URL: Source Code, https://github.com/alibaba/AliOS-Things
Project-URL: Bug Tracker, https://github.com/alibaba/AliOS-Things/issues
Project-URL: Documentation, https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b16145223.0.0.81b460b1lzwYKw#/?from=corp
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: Implementation :: MicroPython
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
License-File: LICENSE


## HaaS Python介绍
HaaS Python是阿里云IoT团队最新研发的一套低代码编程框架，兼容MicroPython编程规范，依托HaaS平台软硬件积木提供AI、支付、蓝牙配网、云连接、UI等物联网场景常用的能力，从而解决了物联网应用开发难的问题。有了Python轻应用框架，物联网编程不再局限于专业软件开发人员，一般的技术员也可以快速实现复杂的物联网需求。
更多HaaS Python介绍和开发资料见[HaaS Python官网](https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b16145223.0.0.595660b1dZDX71#/?from=corp),[创意案例](https://haas.iot.aliyun.com/solution?from=crop), [硬件积木](https://haas.iot.aliyun.com/solution/hardware?from=corp)

HaaS Python is a set of low-code programming frameworks newly developed by Alibaba Cloud IoT team. It is compatible with MicroPython programming specifications. It relies on the hardware and software building blocks of the HaaS platform to provide capabilities commonly used in IoT scenarios such as AI, payment, Bluetooth network configuration, cloud connection, and UI. Solve the difficult problem of IoT application development. With the Python light application framework, IoT programming is no longer limited to professional software developers, and general technicians can quickly implement complex IoT requirements.
For more HaaS Python introduction and development materials, see [HaaS Python official website](https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b16145223.0.0.595660b1dZDX71#/?from=corp), [Creative Case](https://haas.iot.aliyun.com/solution?from=crop), [Hardware Building Blocks](https://haas.iot.aliyun.com/solution/hardware?from=corp)

## 安装方法
* 在[HaaS Python官网](https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b50127119.0.0.4e1260b1ebMIf1#/)下载开发板对应的固件，并完成固件烧录

Download the firmware corresponding to the development board at [HaaS Python website](https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b50127119.0.0.4e1260b1ebMIf1#/) and complete the firmware burning

* 在开发板上运行以下命令完成安装和使用,如果您在使用过程中遇到问题，欢迎在[github上向我们提交issue](https://github.com/alibaba/AliOS-Things/issues)，我们的工程师会及时解答

Run the following commands on the development board to complete the installation and use. If you encounter problems during use, please submit an issue to us on [github](https://github.com/alibaba/AliOS-Things/issues), Our engineers will answer in time
```
import upip
upip.install("haas-python-vibration_sensor")
import haas-python-vibration_sensor
```
# VibrationSensor 震动传感器模块

## 一、产品简介
&emsp;&emsp;
震动传感器用于各种震动触发作用，如防盗报警，智能小车，地震报警等。

<div align="center">
<img src=./../../docs/images/震动传感器.jpeg width=30%/>
</div>


引脚定义

* VCC：电源正 3.3V~5V
* GND：电源地
* DO：数字信号输出
* AO：不使用

## 二、技术参数
* SW-18010P震动传感器
* 比较器输出，信号干净，波形好，驱动能力强，超过15mA
* 工作电压3.3V-5V
* 输出形式：数字开关量输出（0和1）
* 设有固定螺栓孔，方便安装
* 小板PCB尺寸：5.3cmx1.4cm
* 使用宽电压LM393比较器

## 三、软件接口

震动传感器HaaS Python驱动：[下载地址](https://github.com/alibaba/AliOS-Things/tree/master/haas_lib_bundles/python/libraries/vibration_sensor)
<br>

### VibrationSensor - 创建震动传感器对象

* 函数原型

> sensorObj = VibrationSensor(gpioObj)

* 参数说明

该方法初始化一个 VibrationSensor 对象，用于震动传感器数据读取。

|  参数   | 类型  | 必选参数？ | 说明                                             |
| :-----: | :---: | :--------: | :----------------------------------------------- |
| gpioObj | GPIO  |     是     | DO引脚的GPIO对象。调用此函数前需确保对象已被open |

* 返回值

若VibrationSensor对象创建成功，返回VibrationSensor对象；否则抛出Exception

* 示例代码
```python
from VibrationSensor import VibrationSensor
from driver import GPIO

doPin = GPIO()
doPin.open("VibrationSensor")

sensor = VibrationSensor(doPin)
```

### isVibrating() - 获取震动传感器状态
<br>

* 函数功能：

获取震动传感器状态

* 函数原型：

> VibrationSensor.isVibrating()

* 参数说明：

无

* 返回值：

若传感器震动，返回1；否则返回0。

* 示例代码
```python
from VibrationSensor import VibrationSensor
from driver import GPIO

doPin = GPIO()
doPin.open("VibrationSensor")

sensor = VibrationSensor(doPin)
print(sensor.isVibrating())
```

## 四、接口案例

board.json配置
```json
{
    "name": "board-name",
    "version": "1.0.0",
    "io": {
        "VibrationSensor": {
            "type": "GPIO",
            "port": 28,
            "dir": "input",
        },
    }
}
```

Python代码
```python
from VibrationSensor import VibrationSensor
from driver import GPIO

doPin = GPIO()
doPin.open("VibrationSensor")

sensor = VibrationSensor(doPin)

while True:
    utime.sleep(1)
    print(sensor.isVibrating())
```

## 参考文献及购买链接
[1] [购买链接](https://detail.tmall.com/item.htm?id=41236271649)
