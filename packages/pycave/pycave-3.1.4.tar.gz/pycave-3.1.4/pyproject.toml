[tool.poetry]
authors = ["Oliver Borchert <borchero@icloud.com>"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
description = "Traditional Machine Learning Models in PyTorch."
documentation = "https://pycave.borchero.com"
license = "MIT"
name = "pycave"
readme = "README.md"
repository = "https://github.com/borchero/pycave"
version = "3.1.4"

[tool.poetry.dependencies]
lightkit = "^0.4.4"
numpy = "^1.20.3"
python = ">=3.8,<3.10"
pytorch-lightning = "^1.6.0"
torch = "^1.8.0"
torchmetrics = "^0.5.1,<0.6.0"

[tool.poetry.dev-dependencies]
Sphinx = "^4.0.2"
black = "^22.3.0"
flaky = "^3.7.0"
isort = "^5.8.0"
jupyter = "^1.0.0"
pydata-sphinx-theme = "^0.7.2"
pylint = "^2.8.3"
pytest = "^6.2.4"
pytest-benchmark = "^3.4.1"
scanpydoc = "^0.7.1"
scikit-learn = "^0.24.2"
sphinx-autodoc-typehints = "^1.12.0"
sphinx-automodapi = "^0.13"
sphinx-copybutton = "^0.3.3"
sphinxcontrib-spelling = "^7.2.1"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.pylint.messages_control]
disable = [
  "arguments-differ",
  "duplicate-code",
  "missing-module-docstring",
  "invalid-name",
  "no-self-use",
  "too-few-public-methods",
  "too-many-ancestors",
  "too-many-arguments",
  "too-many-branches",
  "too-many-locals",
  "too-many-instance-attributes",
]

[tool.pylint.typecheck]
generated-members = [
  "torch.*",
]

[tool.pyright]
reportIncompatibleMethodOverride = false 
reportPrivateImportUsage = false # can be removed after Pylance v2021.10.1 has been released
reportUnknownArgumentType = false 
reportUnknownMemberType = false 
reportUnknownVariableType = false 
typeCheckingMode = "strict" 

[tool.black]
line-length = 99

[tool.isort]
force_alphabetical_sort_within_sections = true
include_trailing_comma = true
known_first_party = "pycave,tests"
line_length = 99
lines_between_sections = 0
profile = "black"
skip_gitignore = true

[tool.pytest.ini_options]
filterwarnings = [
  "ignore:.*Create unlinked descriptors is going to go away.*:DeprecationWarning",
  "ignore:.*this fit will run with no optimizer.*",
  "ignore:.*Consider increasing the value of the `num_workers` argument.*",
]
