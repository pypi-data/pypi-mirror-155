# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: summa/proto/search_service.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n summa/proto/search_service.proto\x12\x0bsumma.proto\"\x92\x01\n\rSearchRequest\x12\x1f\n\x0bindex_alias\x18\x01 \x01(\tR\nindexAlias\x12(\n\x05query\x18\x02 \x01(\x0b\x32\x12.summa.proto.QueryR\x05query\x12\x36\n\ncollectors\x18\x03 \x03(\x0b\x32\x16.summa.proto.CollectorR\ncollectors\"\x9d\x01\n\x0eSearchResponse\x12\x1d\n\nindex_name\x18\x01 \x01(\tR\tindexName\x12I\n\x11\x63ollector_results\x18\x02 \x03(\x0b\x32\x1c.summa.proto.CollectorResultR\x10\x63ollectorResults\x12!\n\x0c\x65lapsed_secs\x18\x03 \x01(\x01R\x0b\x65lapsedSecs\"\xe0\x03\n\x05Query\x12\x35\n\x07\x62oolean\x18\x01 \x01(\x0b\x32\x19.summa.proto.BooleanQueryH\x00R\x07\x62oolean\x12/\n\x05match\x18\x02 \x01(\x0b\x32\x17.summa.proto.MatchQueryH\x00R\x05match\x12/\n\x05regex\x18\x03 \x01(\x0b\x32\x17.summa.proto.RegexQueryH\x00R\x05regex\x12,\n\x04term\x18\x04 \x01(\x0b\x32\x16.summa.proto.TermQueryH\x00R\x04term\x12\x32\n\x06phrase\x18\x05 \x01(\x0b\x32\x18.summa.proto.PhraseQueryH\x00R\x06phrase\x12/\n\x05range\x18\x06 \x01(\x0b\x32\x17.summa.proto.RangeQueryH\x00R\x05range\x12)\n\x03\x61ll\x18\x07 \x01(\x0b\x32\x15.summa.proto.AllQueryH\x00R\x03\x61ll\x12\x46\n\x0emore_like_this\x18\x08 \x01(\x0b\x32\x1e.summa.proto.MoreLikeThisQueryH\x00R\x0cmoreLikeThis\x12/\n\x05\x62oost\x18\t \x01(\x0b\x32\x17.summa.proto.BoostQueryH\x00R\x05\x62oostB\x07\n\x05query\"\n\n\x08\x41llQuery\"L\n\nBoostQuery\x12(\n\x05query\x18\x01 \x01(\x0b\x32\x12.summa.proto.QueryR\x05query\x12\x14\n\x05score\x18\x02 \x01(\tR\x05score\"\x8e\x04\n\x11MoreLikeThisQuery\x12\x1a\n\x08\x64ocument\x18\x01 \x01(\tR\x08\x64ocument\x12/\n\x11min_doc_frequency\x18\x02 \x01(\x04H\x00R\x0fminDocFrequency\x88\x01\x01\x12/\n\x11max_doc_frequency\x18\x03 \x01(\x04H\x01R\x0fmaxDocFrequency\x88\x01\x01\x12\x31\n\x12min_term_frequency\x18\x04 \x01(\x04H\x02R\x10minTermFrequency\x88\x01\x01\x12+\n\x0fmax_query_terms\x18\x05 \x01(\x04H\x03R\rmaxQueryTerms\x88\x01\x01\x12+\n\x0fmin_word_length\x18\x06 \x01(\x04H\x04R\rminWordLength\x88\x01\x01\x12+\n\x0fmax_word_length\x18\x07 \x01(\x04H\x05R\rmaxWordLength\x88\x01\x01\x12\x19\n\x05\x62oost\x18\x08 \x01(\tH\x06R\x05\x62oost\x88\x01\x01\x12\x1d\n\nstop_words\x18\t \x03(\tR\tstopWordsB\x14\n\x12_min_doc_frequencyB\x14\n\x12_max_doc_frequencyB\x15\n\x13_min_term_frequencyB\x12\n\x10_max_query_termsB\x12\n\x10_min_word_lengthB\x12\n\x10_max_word_lengthB\x08\n\x06_boost\"M\n\x0bPhraseQuery\x12\x14\n\x05\x66ield\x18\x01 \x01(\tR\x05\x66ield\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value\x12\x12\n\x04slop\x18\x03 \x01(\rR\x04slop\"L\n\nRangeQuery\x12\x14\n\x05\x66ield\x18\x01 \x01(\tR\x05\x66ield\x12(\n\x05value\x18\x02 \x01(\x0b\x32\x12.summa.proto.RangeR\x05value\"\"\n\nMatchQuery\x12\x14\n\x05value\x18\x01 \x01(\tR\x05value\"e\n\x0f\x42ooleanSubquery\x12(\n\x05occur\x18\x01 \x01(\x0e\x32\x12.summa.proto.OccurR\x05occur\x12(\n\x05query\x18\x02 \x01(\x0b\x32\x12.summa.proto.QueryR\x05query\"L\n\x0c\x42ooleanQuery\x12<\n\nsubqueries\x18\x01 \x03(\x0b\x32\x1c.summa.proto.BooleanSubqueryR\nsubqueries\"8\n\nRegexQuery\x12\x14\n\x05\x66ield\x18\x01 \x01(\tR\x05\x66ield\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value\"7\n\tTermQuery\x12\x14\n\x05\x66ield\x18\x01 \x01(\tR\x05\x66ield\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value\"\x81\x01\n\x05Range\x12\x12\n\x04left\x18\x01 \x01(\tR\x04left\x12\x14\n\x05right\x18\x02 \x01(\tR\x05right\x12%\n\x0eincluding_left\x18\x03 \x01(\x08R\rincludingLeft\x12\'\n\x0fincluding_right\x18\x04 \x01(\x08R\x0eincludingRight\"r\n\x0eScoredDocument\x12\x1a\n\x08\x64ocument\x18\x01 \x01(\tR\x08\x64ocument\x12(\n\x05score\x18\x02 \x01(\x0b\x32\x12.summa.proto.ScoreR\x05score\x12\x1a\n\x08position\x18\x03 \x01(\rR\x08position\"N\n\x05Score\x12\x1d\n\tf64_score\x18\x01 \x01(\x01H\x00R\x08\x66\x36\x34Score\x12\x1d\n\tu64_score\x18\x02 \x01(\x04H\x00R\x08u64ScoreB\x07\n\x05score\"N\n\x06Scorer\x12\x1d\n\teval_expr\x18\x01 \x01(\tH\x00R\x08\x65valExpr\x12\x1b\n\x08order_by\x18\x02 \x01(\tH\x00R\x07orderByB\x08\n\x06scorer\"\x98\x02\n\tCollector\x12:\n\x08top_docs\x18\x01 \x01(\x0b\x32\x1d.summa.proto.TopDocsCollectorH\x00R\x07topDocs\x12X\n\x12reservoir_sampling\x18\x02 \x01(\x0b\x32\'.summa.proto.ReservoirSamplingCollectorH\x00R\x11reservoirSampling\x12\x33\n\x05\x63ount\x18\x03 \x01(\x0b\x32\x1b.summa.proto.CountCollectorH\x00R\x05\x63ount\x12\x33\n\x05\x66\x61\x63\x65t\x18\x04 \x01(\x0b\x32\x1b.summa.proto.FacetCollectorH\x00R\x05\x66\x61\x63\x65tB\x0b\n\tcollector\"\xbd\x02\n\x0f\x43ollectorResult\x12@\n\x08top_docs\x18\x01 \x01(\x0b\x32#.summa.proto.TopDocsCollectorResultH\x00R\x07topDocs\x12^\n\x12reservoir_sampling\x18\x02 \x01(\x0b\x32-.summa.proto.ReservoirSamplingCollectorResultH\x00R\x11reservoirSampling\x12\x39\n\x05\x63ount\x18\x03 \x01(\x0b\x32!.summa.proto.CountCollectorResultH\x00R\x05\x63ount\x12\x39\n\x05\x66\x61\x63\x65t\x18\x04 \x01(\x0b\x32!.summa.proto.FacetCollectorResultH\x00R\x05\x66\x61\x63\x65tB\x12\n\x10\x63ollector_result\"\x10\n\x0e\x43ountCollector\",\n\x14\x43ountCollectorResult\x12\x14\n\x05\x63ount\x18\x01 \x01(\rR\x05\x63ount\">\n\x0e\x46\x61\x63\x65tCollector\x12\x14\n\x05\x66ield\x18\x01 \x01(\tR\x05\x66ield\x12\x16\n\x06\x66\x61\x63\x65ts\x18\x02 \x03(\tR\x06\x66\x61\x63\x65ts\"\xad\x01\n\x14\x46\x61\x63\x65tCollectorResult\x12U\n\x0c\x66\x61\x63\x65t_counts\x18\x01 \x03(\x0b\x32\x32.summa.proto.FacetCollectorResult.FacetCountsEntryR\x0b\x66\x61\x63\x65tCounts\x1a>\n\x10\x46\x61\x63\x65tCountsEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\x04R\x05value:\x02\x38\x01\"2\n\x1aReservoirSamplingCollector\x12\x14\n\x05limit\x18\x01 \x01(\rR\x05limit\"@\n ReservoirSamplingCollectorResult\x12\x1c\n\tdocuments\x18\x01 \x03(\tR\tdocuments\"}\n\x10TopDocsCollector\x12\x14\n\x05limit\x18\x01 \x01(\rR\x05limit\x12\x16\n\x06offset\x18\x02 \x01(\rR\x06offset\x12\x30\n\x06scorer\x18\x03 \x01(\x0b\x32\x13.summa.proto.ScorerH\x00R\x06scorer\x88\x01\x01\x42\t\n\x07_scorer\"{\n\x16TopDocsCollectorResult\x12\x46\n\x10scored_documents\x18\x01 \x03(\x0b\x32\x1b.summa.proto.ScoredDocumentR\x0fscoredDocuments\x12\x19\n\x08has_next\x18\x02 \x01(\x08R\x07hasNext*+\n\x05Occur\x12\n\n\x06should\x10\x00\x12\x08\n\x04must\x10\x01\x12\x0c\n\x08must_not\x10\x02\x32P\n\tSearchApi\x12\x43\n\x06search\x12\x1a.summa.proto.SearchRequest\x1a\x1b.summa.proto.SearchResponse\"\x00\x62\x06proto3')

_OCCUR = DESCRIPTOR.enum_types_by_name['Occur']
Occur = enum_type_wrapper.EnumTypeWrapper(_OCCUR)
should = 0
must = 1
must_not = 2


_SEARCHREQUEST = DESCRIPTOR.message_types_by_name['SearchRequest']
_SEARCHRESPONSE = DESCRIPTOR.message_types_by_name['SearchResponse']
_QUERY = DESCRIPTOR.message_types_by_name['Query']
_ALLQUERY = DESCRIPTOR.message_types_by_name['AllQuery']
_BOOSTQUERY = DESCRIPTOR.message_types_by_name['BoostQuery']
_MORELIKETHISQUERY = DESCRIPTOR.message_types_by_name['MoreLikeThisQuery']
_PHRASEQUERY = DESCRIPTOR.message_types_by_name['PhraseQuery']
_RANGEQUERY = DESCRIPTOR.message_types_by_name['RangeQuery']
_MATCHQUERY = DESCRIPTOR.message_types_by_name['MatchQuery']
_BOOLEANSUBQUERY = DESCRIPTOR.message_types_by_name['BooleanSubquery']
_BOOLEANQUERY = DESCRIPTOR.message_types_by_name['BooleanQuery']
_REGEXQUERY = DESCRIPTOR.message_types_by_name['RegexQuery']
_TERMQUERY = DESCRIPTOR.message_types_by_name['TermQuery']
_RANGE = DESCRIPTOR.message_types_by_name['Range']
_SCOREDDOCUMENT = DESCRIPTOR.message_types_by_name['ScoredDocument']
_SCORE = DESCRIPTOR.message_types_by_name['Score']
_SCORER = DESCRIPTOR.message_types_by_name['Scorer']
_COLLECTOR = DESCRIPTOR.message_types_by_name['Collector']
_COLLECTORRESULT = DESCRIPTOR.message_types_by_name['CollectorResult']
_COUNTCOLLECTOR = DESCRIPTOR.message_types_by_name['CountCollector']
_COUNTCOLLECTORRESULT = DESCRIPTOR.message_types_by_name['CountCollectorResult']
_FACETCOLLECTOR = DESCRIPTOR.message_types_by_name['FacetCollector']
_FACETCOLLECTORRESULT = DESCRIPTOR.message_types_by_name['FacetCollectorResult']
_FACETCOLLECTORRESULT_FACETCOUNTSENTRY = _FACETCOLLECTORRESULT.nested_types_by_name['FacetCountsEntry']
_RESERVOIRSAMPLINGCOLLECTOR = DESCRIPTOR.message_types_by_name['ReservoirSamplingCollector']
_RESERVOIRSAMPLINGCOLLECTORRESULT = DESCRIPTOR.message_types_by_name['ReservoirSamplingCollectorResult']
_TOPDOCSCOLLECTOR = DESCRIPTOR.message_types_by_name['TopDocsCollector']
_TOPDOCSCOLLECTORRESULT = DESCRIPTOR.message_types_by_name['TopDocsCollectorResult']
SearchRequest = _reflection.GeneratedProtocolMessageType('SearchRequest', (_message.Message,), {
  'DESCRIPTOR' : _SEARCHREQUEST,
  '__module__' : 'summa.proto.search_service_pb2'
  # @@protoc_insertion_point(class_scope:summa.proto.SearchRequest)
  })
_sym_db.RegisterMessage(SearchRequest)

SearchResponse = _reflection.GeneratedProtocolMessageType('SearchResponse', (_message.Message,), {
  'DESCRIPTOR' : _SEARCHRESPONSE,
  '__module__' : 'summa.proto.search_service_pb2'
  # @@protoc_insertion_point(class_scope:summa.proto.SearchResponse)
  })
_sym_db.RegisterMessage(SearchResponse)

Query = _reflection.GeneratedProtocolMessageType('Query', (_message.Message,), {
  'DESCRIPTOR' : _QUERY,
  '__module__' : 'summa.proto.search_service_pb2'
  # @@protoc_insertion_point(class_scope:summa.proto.Query)
  })
_sym_db.RegisterMessage(Query)

AllQuery = _reflection.GeneratedProtocolMessageType('AllQuery', (_message.Message,), {
  'DESCRIPTOR' : _ALLQUERY,
  '__module__' : 'summa.proto.search_service_pb2'
  # @@protoc_insertion_point(class_scope:summa.proto.AllQuery)
  })
_sym_db.RegisterMessage(AllQuery)

BoostQuery = _reflection.GeneratedProtocolMessageType('BoostQuery', (_message.Message,), {
  'DESCRIPTOR' : _BOOSTQUERY,
  '__module__' : 'summa.proto.search_service_pb2'
  # @@protoc_insertion_point(class_scope:summa.proto.BoostQuery)
  })
_sym_db.RegisterMessage(BoostQuery)

MoreLikeThisQuery = _reflection.GeneratedProtocolMessageType('MoreLikeThisQuery', (_message.Message,), {
  'DESCRIPTOR' : _MORELIKETHISQUERY,
  '__module__' : 'summa.proto.search_service_pb2'
  # @@protoc_insertion_point(class_scope:summa.proto.MoreLikeThisQuery)
  })
_sym_db.RegisterMessage(MoreLikeThisQuery)

PhraseQuery = _reflection.GeneratedProtocolMessageType('PhraseQuery', (_message.Message,), {
  'DESCRIPTOR' : _PHRASEQUERY,
  '__module__' : 'summa.proto.search_service_pb2'
  # @@protoc_insertion_point(class_scope:summa.proto.PhraseQuery)
  })
_sym_db.RegisterMessage(PhraseQuery)

RangeQuery = _reflection.GeneratedProtocolMessageType('RangeQuery', (_message.Message,), {
  'DESCRIPTOR' : _RANGEQUERY,
  '__module__' : 'summa.proto.search_service_pb2'
  # @@protoc_insertion_point(class_scope:summa.proto.RangeQuery)
  })
_sym_db.RegisterMessage(RangeQuery)

MatchQuery = _reflection.GeneratedProtocolMessageType('MatchQuery', (_message.Message,), {
  'DESCRIPTOR' : _MATCHQUERY,
  '__module__' : 'summa.proto.search_service_pb2'
  # @@protoc_insertion_point(class_scope:summa.proto.MatchQuery)
  })
_sym_db.RegisterMessage(MatchQuery)

BooleanSubquery = _reflection.GeneratedProtocolMessageType('BooleanSubquery', (_message.Message,), {
  'DESCRIPTOR' : _BOOLEANSUBQUERY,
  '__module__' : 'summa.proto.search_service_pb2'
  # @@protoc_insertion_point(class_scope:summa.proto.BooleanSubquery)
  })
_sym_db.RegisterMessage(BooleanSubquery)

BooleanQuery = _reflection.GeneratedProtocolMessageType('BooleanQuery', (_message.Message,), {
  'DESCRIPTOR' : _BOOLEANQUERY,
  '__module__' : 'summa.proto.search_service_pb2'
  # @@protoc_insertion_point(class_scope:summa.proto.BooleanQuery)
  })
_sym_db.RegisterMessage(BooleanQuery)

RegexQuery = _reflection.GeneratedProtocolMessageType('RegexQuery', (_message.Message,), {
  'DESCRIPTOR' : _REGEXQUERY,
  '__module__' : 'summa.proto.search_service_pb2'
  # @@protoc_insertion_point(class_scope:summa.proto.RegexQuery)
  })
_sym_db.RegisterMessage(RegexQuery)

TermQuery = _reflection.GeneratedProtocolMessageType('TermQuery', (_message.Message,), {
  'DESCRIPTOR' : _TERMQUERY,
  '__module__' : 'summa.proto.search_service_pb2'
  # @@protoc_insertion_point(class_scope:summa.proto.TermQuery)
  })
_sym_db.RegisterMessage(TermQuery)

Range = _reflection.GeneratedProtocolMessageType('Range', (_message.Message,), {
  'DESCRIPTOR' : _RANGE,
  '__module__' : 'summa.proto.search_service_pb2'
  # @@protoc_insertion_point(class_scope:summa.proto.Range)
  })
_sym_db.RegisterMessage(Range)

ScoredDocument = _reflection.GeneratedProtocolMessageType('ScoredDocument', (_message.Message,), {
  'DESCRIPTOR' : _SCOREDDOCUMENT,
  '__module__' : 'summa.proto.search_service_pb2'
  # @@protoc_insertion_point(class_scope:summa.proto.ScoredDocument)
  })
_sym_db.RegisterMessage(ScoredDocument)

Score = _reflection.GeneratedProtocolMessageType('Score', (_message.Message,), {
  'DESCRIPTOR' : _SCORE,
  '__module__' : 'summa.proto.search_service_pb2'
  # @@protoc_insertion_point(class_scope:summa.proto.Score)
  })
_sym_db.RegisterMessage(Score)

Scorer = _reflection.GeneratedProtocolMessageType('Scorer', (_message.Message,), {
  'DESCRIPTOR' : _SCORER,
  '__module__' : 'summa.proto.search_service_pb2'
  # @@protoc_insertion_point(class_scope:summa.proto.Scorer)
  })
_sym_db.RegisterMessage(Scorer)

Collector = _reflection.GeneratedProtocolMessageType('Collector', (_message.Message,), {
  'DESCRIPTOR' : _COLLECTOR,
  '__module__' : 'summa.proto.search_service_pb2'
  # @@protoc_insertion_point(class_scope:summa.proto.Collector)
  })
_sym_db.RegisterMessage(Collector)

CollectorResult = _reflection.GeneratedProtocolMessageType('CollectorResult', (_message.Message,), {
  'DESCRIPTOR' : _COLLECTORRESULT,
  '__module__' : 'summa.proto.search_service_pb2'
  # @@protoc_insertion_point(class_scope:summa.proto.CollectorResult)
  })
_sym_db.RegisterMessage(CollectorResult)

CountCollector = _reflection.GeneratedProtocolMessageType('CountCollector', (_message.Message,), {
  'DESCRIPTOR' : _COUNTCOLLECTOR,
  '__module__' : 'summa.proto.search_service_pb2'
  # @@protoc_insertion_point(class_scope:summa.proto.CountCollector)
  })
_sym_db.RegisterMessage(CountCollector)

CountCollectorResult = _reflection.GeneratedProtocolMessageType('CountCollectorResult', (_message.Message,), {
  'DESCRIPTOR' : _COUNTCOLLECTORRESULT,
  '__module__' : 'summa.proto.search_service_pb2'
  # @@protoc_insertion_point(class_scope:summa.proto.CountCollectorResult)
  })
_sym_db.RegisterMessage(CountCollectorResult)

FacetCollector = _reflection.GeneratedProtocolMessageType('FacetCollector', (_message.Message,), {
  'DESCRIPTOR' : _FACETCOLLECTOR,
  '__module__' : 'summa.proto.search_service_pb2'
  # @@protoc_insertion_point(class_scope:summa.proto.FacetCollector)
  })
_sym_db.RegisterMessage(FacetCollector)

FacetCollectorResult = _reflection.GeneratedProtocolMessageType('FacetCollectorResult', (_message.Message,), {

  'FacetCountsEntry' : _reflection.GeneratedProtocolMessageType('FacetCountsEntry', (_message.Message,), {
    'DESCRIPTOR' : _FACETCOLLECTORRESULT_FACETCOUNTSENTRY,
    '__module__' : 'summa.proto.search_service_pb2'
    # @@protoc_insertion_point(class_scope:summa.proto.FacetCollectorResult.FacetCountsEntry)
    })
  ,
  'DESCRIPTOR' : _FACETCOLLECTORRESULT,
  '__module__' : 'summa.proto.search_service_pb2'
  # @@protoc_insertion_point(class_scope:summa.proto.FacetCollectorResult)
  })
_sym_db.RegisterMessage(FacetCollectorResult)
_sym_db.RegisterMessage(FacetCollectorResult.FacetCountsEntry)

ReservoirSamplingCollector = _reflection.GeneratedProtocolMessageType('ReservoirSamplingCollector', (_message.Message,), {
  'DESCRIPTOR' : _RESERVOIRSAMPLINGCOLLECTOR,
  '__module__' : 'summa.proto.search_service_pb2'
  # @@protoc_insertion_point(class_scope:summa.proto.ReservoirSamplingCollector)
  })
_sym_db.RegisterMessage(ReservoirSamplingCollector)

ReservoirSamplingCollectorResult = _reflection.GeneratedProtocolMessageType('ReservoirSamplingCollectorResult', (_message.Message,), {
  'DESCRIPTOR' : _RESERVOIRSAMPLINGCOLLECTORRESULT,
  '__module__' : 'summa.proto.search_service_pb2'
  # @@protoc_insertion_point(class_scope:summa.proto.ReservoirSamplingCollectorResult)
  })
_sym_db.RegisterMessage(ReservoirSamplingCollectorResult)

TopDocsCollector = _reflection.GeneratedProtocolMessageType('TopDocsCollector', (_message.Message,), {
  'DESCRIPTOR' : _TOPDOCSCOLLECTOR,
  '__module__' : 'summa.proto.search_service_pb2'
  # @@protoc_insertion_point(class_scope:summa.proto.TopDocsCollector)
  })
_sym_db.RegisterMessage(TopDocsCollector)

TopDocsCollectorResult = _reflection.GeneratedProtocolMessageType('TopDocsCollectorResult', (_message.Message,), {
  'DESCRIPTOR' : _TOPDOCSCOLLECTORRESULT,
  '__module__' : 'summa.proto.search_service_pb2'
  # @@protoc_insertion_point(class_scope:summa.proto.TopDocsCollectorResult)
  })
_sym_db.RegisterMessage(TopDocsCollectorResult)

_SEARCHAPI = DESCRIPTOR.services_by_name['SearchApi']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _FACETCOLLECTORRESULT_FACETCOUNTSENTRY._options = None
  _FACETCOLLECTORRESULT_FACETCOUNTSENTRY._serialized_options = b'8\001'
  _OCCUR._serialized_start=3634
  _OCCUR._serialized_end=3677
  _SEARCHREQUEST._serialized_start=50
  _SEARCHREQUEST._serialized_end=196
  _SEARCHRESPONSE._serialized_start=199
  _SEARCHRESPONSE._serialized_end=356
  _QUERY._serialized_start=359
  _QUERY._serialized_end=839
  _ALLQUERY._serialized_start=841
  _ALLQUERY._serialized_end=851
  _BOOSTQUERY._serialized_start=853
  _BOOSTQUERY._serialized_end=929
  _MORELIKETHISQUERY._serialized_start=932
  _MORELIKETHISQUERY._serialized_end=1458
  _PHRASEQUERY._serialized_start=1460
  _PHRASEQUERY._serialized_end=1537
  _RANGEQUERY._serialized_start=1539
  _RANGEQUERY._serialized_end=1615
  _MATCHQUERY._serialized_start=1617
  _MATCHQUERY._serialized_end=1651
  _BOOLEANSUBQUERY._serialized_start=1653
  _BOOLEANSUBQUERY._serialized_end=1754
  _BOOLEANQUERY._serialized_start=1756
  _BOOLEANQUERY._serialized_end=1832
  _REGEXQUERY._serialized_start=1834
  _REGEXQUERY._serialized_end=1890
  _TERMQUERY._serialized_start=1892
  _TERMQUERY._serialized_end=1947
  _RANGE._serialized_start=1950
  _RANGE._serialized_end=2079
  _SCOREDDOCUMENT._serialized_start=2081
  _SCOREDDOCUMENT._serialized_end=2195
  _SCORE._serialized_start=2197
  _SCORE._serialized_end=2275
  _SCORER._serialized_start=2277
  _SCORER._serialized_end=2355
  _COLLECTOR._serialized_start=2358
  _COLLECTOR._serialized_end=2638
  _COLLECTORRESULT._serialized_start=2641
  _COLLECTORRESULT._serialized_end=2958
  _COUNTCOLLECTOR._serialized_start=2960
  _COUNTCOLLECTOR._serialized_end=2976
  _COUNTCOLLECTORRESULT._serialized_start=2978
  _COUNTCOLLECTORRESULT._serialized_end=3022
  _FACETCOLLECTOR._serialized_start=3024
  _FACETCOLLECTOR._serialized_end=3086
  _FACETCOLLECTORRESULT._serialized_start=3089
  _FACETCOLLECTORRESULT._serialized_end=3262
  _FACETCOLLECTORRESULT_FACETCOUNTSENTRY._serialized_start=3200
  _FACETCOLLECTORRESULT_FACETCOUNTSENTRY._serialized_end=3262
  _RESERVOIRSAMPLINGCOLLECTOR._serialized_start=3264
  _RESERVOIRSAMPLINGCOLLECTOR._serialized_end=3314
  _RESERVOIRSAMPLINGCOLLECTORRESULT._serialized_start=3316
  _RESERVOIRSAMPLINGCOLLECTORRESULT._serialized_end=3380
  _TOPDOCSCOLLECTOR._serialized_start=3382
  _TOPDOCSCOLLECTOR._serialized_end=3507
  _TOPDOCSCOLLECTORRESULT._serialized_start=3509
  _TOPDOCSCOLLECTORRESULT._serialized_end=3632
  _SEARCHAPI._serialized_start=3679
  _SEARCHAPI._serialized_end=3759
# @@protoc_insertion_point(module_scope)
