"""
    Flex Comms API 2.0

    Communication centralised around construction data  # noqa: E501

    The version of the OpenAPI document: 2.0
    Contact: info@xbim.net
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from xbim_flex.comms.api_client import ApiClient, Endpoint as _Endpoint
from xbim_flex.comms.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)


class SnapshotsApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.snapshots_get_snapshot_endpoint = _Endpoint(
            settings={
                'response_type': None,
                'auth': [],
                'endpoint_path': "/{region}/comms/2.0/Snapshots/{hash}/{fileId}",
                'operation_id': 'snapshots_get_snapshot',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'hash',
                    'file_id',
                    'region',
                ],
                'required': [
                    'hash',
                    'file_id',
                    'region',
                ],
                'nullable': [
                ],
                'enum': [
                    'region',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('region',): {

                        "UK": "UK",
                        "WESTEUROPE": "WestEurope",
                        "SANDBOX": "Sandbox"
                    },
                },
                'openapi_types': {
                    'hash':
                        (str,),
                    'file_id':
                        (str,),
                    'region':
                        (str,),
                },
                'attribute_map': {
                    'hash': 'hash',
                    'file_id': 'fileId',
                    'region': 'region',
                },
                'location_map': {
                    'hash': 'path',
                    'file_id': 'path',
                    'region': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [],
                'content_type': [],
            },
            api_client=api_client
        )

    def snapshots_get_snapshot(
        self,
        hash,
        file_id,
        region="UK",
        **kwargs
    ):
        """Gets a File Blob from a Message  # noqa: E501

        <span style='font-size: 17px;'>Summary:</span>Gets a File Blob from a Message.<br/>Return Type: <b></b><br/><br/>  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.snapshots_get_snapshot(hash, file_id, region="UK", async_req=True)
        >>> result = thread.get()

        Args:
            hash (str): A hashId identifying the conversation and message
            file_id (str): The Id of the file to download
            region (str): The data center region the data resides in. defaults to "UK", must be one of ["UK"]

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            None
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['hash'] = \
            hash
        kwargs['file_id'] = \
            file_id
        kwargs['region'] = \
            region
        return self.snapshots_get_snapshot_endpoint.call_with_http_info(**kwargs)

