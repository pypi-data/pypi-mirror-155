Metadata-Version: 2.1
Name: asynchron
Version: 0.4.0
Summary: Python service framework with code generator based on AsyncAPI specification
Home-page: https://github.com/zerlok/asynchron
License: MIT
Keywords: asyncapi,codegen,amqp
Author: zerlok
Author-email: denergytro@gmail.com
Requires-Python: >=3.8,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Code Generators
Provides-Extra: aio-pika
Provides-Extra: cli
Requires-Dist: Jinja2 (>=3.1.2,<4.0.0); extra == "cli"
Requires-Dist: PyYAML (>=6.0,<7.0); extra == "cli"
Requires-Dist: aio-pika (>=8.0.3,<9.0.0); extra == "aio-pika"
Requires-Dist: click (>=8.1.3,<9.0.0); extra == "cli"
Requires-Dist: dependency-injector (>=4.39.1,<5.0.0); extra == "cli"
Requires-Dist: jsonschema (>=4.6.0,<5.0.0); extra == "cli"
Requires-Dist: pydantic (>=1.9.1,<2.0.0); extra == "cli" or extra == "aio-pika"
Requires-Dist: stringcase (>=1.2.0,<2.0.0); extra == "cli"
Project-URL: Repository, https://github.com/zerlok/asynchron
Description-Content-Type: text/markdown

# asynchron

Python service framework with code generator based on AsyncAPI specification

## Usage example

1) install and run codegen
    ```bash
    poetry add asynchron -E cli
    poetry run asynchron -f /path/to/asyncapi.yaml codegen python-aio-pika -o /output/dir
    ```
2) install dependencies for you generated code
    ```bash
    poetry add asynchron -E aio-pika
    ```

## Development

Use bash script to install all necessary dependencies. It installs all defined extras from `pyproject.toml`

```bash
./scripts/install-dev.sh
```

