{"version":3,"file":"chunks/app_components_modals_helpSearchModal_tsx-app_components_organizations_pageFilters_utils_tsx--1a3e66.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/hook.tsx","webpack:///./app/utils/parseHtmlMarks.tsx","webpack:///./app/components/search/sources/helpSource.tsx","webpack:///./app/components/helpSearch.tsx","webpack:///./app/components/modals/helpSearchModal.tsx","webpack:///./app/components/organizations/pageFilters/utils.tsx","webpack:///./app/components/truncate.tsx","webpack:///./app/data/forms/accountEmails.tsx","webpack:///./app/utils/analytics/trackAdvancedAnalyticsEvent.tsx","webpack:///./app/utils/events.tsx","webpack:///./app/utils/platform.tsx","webpack:///./app/views/organizationContext.tsx"],"sourcesContent":["import {Component} from 'react';\n\nimport HookStore from 'sentry/stores/hookStore';\nimport {HookName, Hooks} from 'sentry/types/hooks';\n\ntype Props<H extends HookName> = {\n  /**\n   * The name of the hook as listed in hookstore.add(hookName, callback)\n   */\n  name: H;\n  /**\n   * If children are provided as a function to the Hook, the hooks will be\n   * passed down as a render prop.\n   */\n  children?: (opts: {hooks: Array<Hooks[H]>}) => React.ReactNode;\n} & Omit<Parameters<Hooks[H]>[0], 'name'>;\n\ntype HookState<H extends HookName> = {\n  hooks: Array<Hooks[H]>;\n};\n\n/**\n * Instead of accessing the HookStore directly, use this.\n *\n * If the hook slot needs to perform anything w/ the hooks, you can pass a\n * function as a child and you will receive an object with a `hooks` key\n *\n * Example:\n *\n *   <Hook name=\"my-hook\">\n *     {({hooks}) => hooks.map(hook => (\n *       <Wrapper>{hook}</Wrapper>\n *     ))}\n *   </Hook>\n */\nfunction Hook<H extends HookName>({name, ...props}: Props<H>) {\n  class HookComponent extends Component<{}, HookState<H>> {\n    static displayName = `Hook(${name})`;\n\n    state = {\n      hooks: HookStore.get(name).map(cb => cb(props)),\n    };\n\n    componentWillUnmount() {\n      this.unsubscribe();\n    }\n\n    handleHooks(hookName: HookName, hooks: Array<Hooks[H]>) {\n      // Make sure that the incoming hook update matches this component's hook name\n      if (hookName !== name) {\n        return;\n      }\n\n      this.setState({hooks: hooks.map(cb => cb(props))});\n    }\n\n    unsubscribe = HookStore.listen(\n      (hookName: HookName, hooks: Array<Hooks[H]>) => this.handleHooks(hookName, hooks),\n      undefined\n    );\n\n    render() {\n      const {children} = props;\n\n      if (!this.state.hooks || !this.state.hooks.length) {\n        return null;\n      }\n\n      if (typeof children === 'function') {\n        return children({hooks: this.state.hooks});\n      }\n\n      return this.state.hooks;\n    }\n  }\n\n  return <HookComponent />;\n}\n\nexport default Hook;\n","import type {Fuse} from 'sentry/utils/fuzzySearch';\n\ntype Options = {\n  htmlString: string;\n  key: string;\n  markTags: {\n    highlightPostTag: string;\n    highlightPreTag: string;\n  };\n};\n\n/**\n * Parses the \"marked\" html strings into a {key, value, indices} (mimincing the\n * FuseResultMatch type) object, where the indices are a set of zero indexed\n * [start, end] indices for what should be highlighted.\n *\n * @param key The key of the field, this mimics the Fuse match object\n * @param htmlString The html string to parse\n * @param markTags.highlightPreTag The left tag\n * @param markTags.highlightPostTag The right tag\n */\nexport default function parseHtmlMarks({key, htmlString, markTags}: Options) {\n  const {highlightPreTag, highlightPostTag} = markTags;\n\n  const indices: [number, number][] = [];\n  let value = htmlString;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const openIndex = value.indexOf(highlightPreTag);\n    const openIndexEnd = openIndex + highlightPreTag.length;\n    if (openIndex === -1 || value.indexOf(highlightPostTag) === -1) {\n      break;\n    }\n    value = value.slice(0, openIndex) + value.slice(openIndexEnd);\n\n    const closeIndex = value.indexOf(highlightPostTag);\n    const closeIndexEnd = closeIndex + highlightPostTag.length;\n    value = value.slice(0, closeIndex) + value.slice(closeIndexEnd);\n\n    indices.push([openIndex, closeIndex - 1]);\n  }\n\n  return {key, value, indices} as Fuse.FuseResultMatch;\n}\n","import {Component} from 'react';\nimport {withRouter, WithRouterProps} from 'react-router';\nimport {\n  Result as SearchResult,\n  SentryGlobalSearch,\n  standardSDKSlug,\n} from '@sentry-internal/global-search';\nimport dompurify from 'dompurify';\nimport debounce from 'lodash/debounce';\n\nimport {Organization, Project} from 'sentry/types';\nimport parseHtmlMarks from 'sentry/utils/parseHtmlMarks';\nimport withLatestContext from 'sentry/utils/withLatestContext';\n\nimport {ChildProps, Result, ResultItem} from './types';\n\ntype Props = WithRouterProps & {\n  /**\n   * Render function that renders the global search result\n   */\n  children: (props: ChildProps) => React.ReactNode;\n  organization: Organization;\n  /**\n   * Specific platforms to filter reults to\n   */\n  platforms: string[];\n  project: Project;\n  /**\n   * The string to search the navigation routes for\n   */\n  query: string;\n};\n\ntype State = {\n  loading: boolean;\n  results: Result[];\n};\n\nconst MARK_TAGS = {\n  highlightPreTag: '<mark>',\n  highlightPostTag: '</mark>',\n};\n\nclass HelpSource extends Component<Props, State> {\n  state: State = {\n    loading: false,\n    results: [],\n  };\n\n  componentDidMount() {\n    if (this.props.query !== undefined) {\n      this.doSearch(this.props.query);\n    }\n  }\n\n  componentDidUpdate(nextProps: Props) {\n    if (nextProps.query !== this.props.query) {\n      this.doSearch(nextProps.query);\n    }\n  }\n\n  search = new SentryGlobalSearch(['docs', 'help-center', 'develop', 'blog']);\n\n  async unbouncedSearch(query: string) {\n    this.setState({loading: true});\n    const {platforms = []} = this.props;\n\n    const searchResults = await this.search.query(query, {\n      platforms: platforms.map(platform => standardSDKSlug(platform)?.slug!),\n    });\n    const results = mapSearchResults(searchResults);\n\n    this.setState({loading: false, results});\n  }\n\n  doSearch = debounce(this.unbouncedSearch, 300);\n\n  render() {\n    return this.props.children({\n      isLoading: this.state.loading,\n      results: this.state.results,\n    });\n  }\n}\n\nfunction mapSearchResults(results: SearchResult[]) {\n  const items: Result[] = [];\n\n  results.forEach(section => {\n    const sectionItems = section.hits.map(hit => {\n      const title = parseHtmlMarks({\n        key: 'title',\n        htmlString: hit.title ?? '',\n        markTags: MARK_TAGS,\n      });\n      const description = parseHtmlMarks({\n        key: 'description',\n        htmlString: hit.text ?? '',\n        markTags: MARK_TAGS,\n      });\n\n      const item: ResultItem = {\n        ...hit,\n        sourceType: 'help',\n        resultType: `help-${hit.site}` as ResultItem['resultType'],\n        title: dompurify.sanitize(hit.title ?? ''),\n        extra: hit.context.context1,\n        description: hit.text ? dompurify.sanitize(hit.text) : undefined,\n        to: hit.url,\n      };\n\n      return {item, matches: [title, description], score: 1, refIndex: 0};\n    });\n\n    // The first element should indicate the section.\n    if (sectionItems.length > 0) {\n      sectionItems[0].item.sectionHeading = section.name;\n      sectionItems[0].item.sectionCount = sectionItems.length;\n\n      items.push(...sectionItems);\n      return;\n    }\n\n    // If we didn't have any results for this section mark it as empty\n    const emptyHeaderItem: ResultItem = {\n      sourceType: 'help',\n      resultType: `help-${section.site}` as ResultItem['resultType'],\n      title: `No results in ${section.name}`,\n      sectionHeading: section.name,\n      empty: true,\n    };\n\n    items.push({item: emptyHeaderItem, score: 1, refIndex: 0});\n  });\n\n  return items;\n}\n\nexport {HelpSource};\nexport default withLatestContext(withRouter(HelpSource));\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Search} from 'sentry/components/search';\nimport SearchResult from 'sentry/components/search/searchResult';\nimport SearchResultWrapper from 'sentry/components/search/searchResultWrapper';\nimport HelpSource from 'sentry/components/search/sources/helpSource';\nimport {IconWindow} from 'sentry/icons';\nimport {t, tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ntype ItemRenderer = React.ComponentProps<typeof Search>['renderItem'];\n\nconst renderResult: ItemRenderer = ({item, matches, itemProps, highlighted}) => {\n  const sectionHeading =\n    item.sectionHeading !== undefined ? (\n      <SectionHeading>\n        <IconWindow />\n        {t('From %s', item.sectionHeading)}\n        <Count>{tn('%s result', '%s results', item.sectionCount ?? 0)}</Count>\n      </SectionHeading>\n    ) : null;\n\n  if (item.empty) {\n    return (\n      <Fragment>\n        {sectionHeading}\n        <Empty>{t('No results from %s', item.sectionHeading)}</Empty>\n      </Fragment>\n    );\n  }\n\n  return (\n    <Fragment>\n      {sectionHeading}\n      <SearchResultWrapper {...itemProps} highlighted={highlighted}>\n        <SearchResult highlighted={highlighted} item={item} matches={matches} />\n      </SearchResultWrapper>\n    </Fragment>\n  );\n};\n\ntype Props = Omit<\n  React.ComponentProps<typeof Search>,\n  'sources' | 'minSearch' | 'closeOnSelect' | 'renderItem'\n>;\n\n// TODO(ts): Type based on Search props once that has types\nconst HelpSearch = (props: Props) => (\n  <Search\n    {...props}\n    sources={[HelpSource]}\n    minSearch={3}\n    closeOnSelect={false}\n    renderItem={renderResult}\n  />\n);\n\nconst SectionHeading = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr max-content;\n  gap: ${space(1)};\n  align-items: center;\n  background: ${p => p.theme.backgroundSecondary};\n  padding: ${space(1)} ${space(2)};\n\n  &:not(:first-of-type) {\n    border-top: 1px solid ${p => p.theme.innerBorder};\n  }\n`;\n\nconst Count = styled('div')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: ${p => p.theme.gray300};\n`;\n\nconst Empty = styled('div')`\n  display: flex;\n  align-items: center;\n  padding: ${space(2)};\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n  border-top: 1px solid ${p => p.theme.innerBorder};\n`;\n\nexport default HelpSearch;\n","import {ClassNames, css, useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport HelpSearch from 'sentry/components/helpSearch';\nimport Hook from 'sentry/components/hook';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype Props = ModalRenderProps & {\n  organization: Organization;\n  placeholder?: string;\n};\n\nfunction HelpSearchModal({\n  Body,\n  closeModal,\n  organization,\n  placeholder = t('Search for documentation, FAQs, blog posts...'),\n  ...props\n}: Props) {\n  const theme = useTheme();\n\n  return (\n    <Body>\n      <ClassNames>\n        {({css: injectedCss}) => (\n          <HelpSearch\n            {...props}\n            entryPoint=\"sidebar_help\"\n            dropdownClassName={injectedCss`\n                width: 100%;\n                border: transparent;\n                border-top-left-radius: 0;\n                border-top-right-radius: 0;\n                position: initial;\n                box-shadow: none;\n                border-top: 1px solid ${theme.border};\n              `}\n            renderInput={({getInputProps}) => (\n              <InputWrapper>\n                <Input autoFocus {...getInputProps({type: 'text', placeholder})} />\n              </InputWrapper>\n            )}\n            resultFooter={\n              <Hook name=\"help-modal:footer\" {...{organization, closeModal}} />\n            }\n          />\n        )}\n      </ClassNames>\n    </Body>\n  );\n}\n\nconst InputWrapper = styled('div')`\n  padding: ${space(0.25)};\n`;\n\nconst Input = styled('input')`\n  width: 100%;\n  padding: ${space(1)};\n  border: none;\n  border-radius: 8px;\n  outline: none;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const modalCss = css`\n  [role='document'] {\n    padding: 0;\n  }\n`;\n\nexport default withOrganization(HelpSearchModal);\n","import {Location} from 'history';\nimport identity from 'lodash/identity';\nimport isEqual from 'lodash/isEqual';\nimport pick from 'lodash/pick';\nimport pickBy from 'lodash/pickBy';\n\nimport {DEFAULT_STATS_PERIOD} from 'sentry/constants';\nimport {DATE_TIME_KEYS, URL_PARAM} from 'sentry/constants/pageFilters';\nimport {PageFilters} from 'sentry/types';\n\n/**\n * Make a default page filters object\n */\nexport function getDefaultSelection(): PageFilters {\n  const datetime = {\n    start: null,\n    end: null,\n    period: DEFAULT_STATS_PERIOD,\n    utc: null,\n  };\n\n  return {\n    projects: [],\n    environments: [],\n    datetime,\n  };\n}\n\n/**\n * Extract the page filter parameters from an object\n * Useful for extracting page filter properties from the current URL\n * when building another URL.\n */\nexport function extractSelectionParameters(query: Location['query']) {\n  return pickBy(pick(query, Object.values(URL_PARAM)), identity);\n}\n\n/**\n * Extract the page filter datetime parameters from an object.\n */\nexport function extractDatetimeSelectionParameters(query: Location['query']) {\n  return pickBy(pick(query, Object.values(DATE_TIME_KEYS)), identity);\n}\n\n/**\n * Compare the non-utc values of two selections.\n * Useful when re-fetching data based on page filters changing.\n *\n * utc is not compared as there is a problem somewhere in the selection\n * data flow that results in it being undefined | null | boolean instead of null | boolean.\n * The additional undefined state makes this function just as unreliable as isEqual(selection, other)\n */\nexport function isSelectionEqual(selection: PageFilters, other: PageFilters): boolean {\n  if (\n    !isEqual(selection.projects, other.projects) ||\n    !isEqual(selection.environments, other.environments)\n  ) {\n    return false;\n  }\n\n  // Use string comparison as we aren't interested in the identity of the datetimes.\n  if (\n    selection.datetime.period !== other.datetime.period ||\n    selection.datetime.start?.toString() !== other.datetime.start?.toString() ||\n    selection.datetime.end?.toString() !== other.datetime.end?.toString()\n  ) {\n    return false;\n  }\n\n  return true;\n}\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\ntype DefaultProps = {\n  className: string;\n  expandDirection: 'left' | 'right';\n  expandable: boolean;\n  leftTrim: boolean;\n  maxLength: number;\n  minLength: number;\n};\n\ntype Props = DefaultProps & {\n  value: string;\n  trimRegex?: RegExp;\n};\n\ntype State = {\n  isExpanded: boolean;\n};\n\nclass Truncate extends Component<Props, State> {\n  static defaultProps: DefaultProps = {\n    className: '',\n    minLength: 15,\n    maxLength: 50,\n    leftTrim: false,\n    expandable: true,\n    expandDirection: 'right',\n  };\n\n  state: State = {\n    isExpanded: false,\n  };\n\n  onFocus = () => {\n    const {value, maxLength} = this.props;\n    if (value.length <= maxLength) {\n      return;\n    }\n    this.setState({isExpanded: true});\n  };\n\n  onBlur = () => {\n    if (this.state.isExpanded) {\n      this.setState({isExpanded: false});\n    }\n  };\n\n  render() {\n    const {\n      className,\n      leftTrim,\n      trimRegex,\n      minLength,\n      maxLength,\n      value,\n      expandable,\n      expandDirection,\n    } = this.props;\n    const isTruncated = value.length > maxLength;\n    let shortValue: React.ReactNode = '';\n\n    if (isTruncated) {\n      const slicedValue = leftTrim\n        ? value.slice(value.length - (maxLength - 4), value.length)\n        : value.slice(0, maxLength - 4);\n\n      // Try to trim to values from the regex\n      if (trimRegex && leftTrim) {\n        const valueIndex = slicedValue.search(trimRegex);\n        shortValue = (\n          <span>\n            …{' '}\n            {valueIndex > 0 && valueIndex <= maxLength - minLength\n              ? slicedValue.slice(slicedValue.search(trimRegex), slicedValue.length)\n              : slicedValue}\n          </span>\n        );\n      } else if (trimRegex && !leftTrim) {\n        const matches = slicedValue.match(trimRegex);\n        let lastIndex = matches\n          ? slicedValue.lastIndexOf(matches[matches.length - 1]) + 1\n          : slicedValue.length;\n        if (lastIndex <= minLength) {\n          lastIndex = slicedValue.length;\n        }\n        shortValue = <span>{slicedValue.slice(0, lastIndex)} …</span>;\n      } else if (leftTrim) {\n        shortValue = <span>… {slicedValue}</span>;\n      } else {\n        shortValue = <span>{slicedValue} …</span>;\n      }\n    } else {\n      shortValue = value;\n    }\n\n    return (\n      <Wrapper\n        className={className}\n        onMouseOver={expandable ? this.onFocus : undefined}\n        onMouseOut={expandable ? this.onBlur : undefined}\n        onFocus={expandable ? this.onFocus : undefined}\n        onBlur={expandable ? this.onBlur : undefined}\n      >\n        <span>{shortValue}</span>\n        {isTruncated && (\n          <FullValue expanded={this.state.isExpanded} expandDirection={expandDirection}>\n            {value}\n          </FullValue>\n        )}\n      </Wrapper>\n    );\n  }\n}\n\nconst Wrapper = styled('span')`\n  position: relative;\n`;\n\nexport const FullValue = styled('span')<{\n  expandDirection: 'left' | 'right';\n  expanded: boolean;\n}>`\n  display: none;\n  position: absolute;\n  background: ${p => p.theme.background};\n  padding: ${space(0.5)};\n  border: 1px solid ${p => p.theme.innerBorder};\n  white-space: nowrap;\n  border-radius: ${space(0.5)};\n  top: -5px;\n  ${p => p.expandDirection === 'left' && 'right: -5px;'}\n  ${p => p.expandDirection === 'right' && 'left: -5px;'}\n\n  ${p =>\n    p.expanded &&\n    `\n    z-index: ${p.theme.zIndex.truncationFullValue};\n    display: block;\n    `}\n`;\n\nexport default Truncate;\n","import {JsonFormObject} from 'sentry/components/forms/type';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/account/emails/';\n\nconst formGroups: JsonFormObject[] = [\n  {\n    // Form \"section\"/\"panel\"\n    title: 'Add Secondary Emails',\n    fields: [\n      {\n        name: 'email',\n        type: 'string',\n\n        // additional data/props that is related to rendering of form field rather than data\n        label: 'Additional Email',\n        placeholder: 'e.g. secondary@example.com',\n        help: 'Designate an alternative email for this account',\n        showReturnButton: true,\n      },\n    ],\n  },\n];\n\nexport default formGroups;\n","import {coreUIEventMap, CoreUIEventParameters} from './coreuiAnalyticsEvents';\nimport {dashboardsEventMap, DashboardsEventParameters} from './dashboardsAnalyticsEvents';\nimport {discoverEventMap, DiscoverEventParameters} from './discoverAnalyticsEvents';\nimport {growthEventMap, GrowthEventParameters} from './growthAnalyticsEvents';\nimport {issueEventMap, IssueEventParameters} from './issueAnalyticsEvents';\nimport makeAnalyticsFunction from './makeAnalyticsFunction';\nimport {\n  performanceEventMap,\n  PerformanceEventParameters,\n} from './performanceAnalyticsEvents';\nimport {samplingEventMap, SamplingEventParameters} from './samplingAnalyticsEvents';\nimport {searchEventMap, SearchEventParameters} from './searchAnalyticsEvents';\nimport {settingsEventMap, SettingsEventParameters} from './settingsAnalyticsEvents';\nimport {TeamInsightsEventParameters, workflowEventMap} from './workflowAnalyticsEvents';\n\ntype EventParameters = GrowthEventParameters &\n  IssueEventParameters &\n  PerformanceEventParameters &\n  DashboardsEventParameters &\n  DiscoverEventParameters &\n  TeamInsightsEventParameters &\n  SearchEventParameters &\n  SettingsEventParameters &\n  CoreUIEventParameters &\n  SamplingEventParameters;\n\nconst allEventMap = {\n  ...growthEventMap,\n  ...issueEventMap,\n  ...performanceEventMap,\n  ...dashboardsEventMap,\n  ...discoverEventMap,\n  ...workflowEventMap,\n  ...searchEventMap,\n  ...settingsEventMap,\n  ...coreUIEventMap,\n  ...samplingEventMap,\n};\n\n/**\n * Generic typed analytics function for growth, issue, and performance events.\n * Can split up analytics functions to a smaller set of events like we do for trackIntegrationAnalytics\n */\nconst trackAdvancedAnalyticsEvent = makeAnalyticsFunction<EventParameters>(allEventMap);\n\nexport default trackAdvancedAnalyticsEvent;\n","import {\n  BaseGroup,\n  EventMetadata,\n  EventOrGroupType,\n  GroupTombstone,\n  TreeLabelPart,\n} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {isMobilePlatform, isNativePlatform} from 'sentry/utils/platform';\n\nfunction isTombstone(maybe: BaseGroup | Event | GroupTombstone): maybe is GroupTombstone {\n  return !maybe.hasOwnProperty('type');\n}\n\n/**\n * Extract the display message from an event.\n */\nexport function getMessage(\n  event: Event | BaseGroup | GroupTombstone\n): string | undefined {\n  if (isTombstone(event)) {\n    return event.culprit || '';\n  }\n\n  const {metadata, type, culprit} = event;\n\n  switch (type) {\n    case EventOrGroupType.ERROR:\n      return metadata.value;\n    case EventOrGroupType.CSP:\n      return metadata.message;\n    case EventOrGroupType.EXPECTCT:\n    case EventOrGroupType.EXPECTSTAPLE:\n    case EventOrGroupType.HPKP:\n      return '';\n    default:\n      return culprit || '';\n  }\n}\n\n/**\n * Get the location from an event.\n */\nexport function getLocation(event: Event | BaseGroup | GroupTombstone) {\n  if (isTombstone(event)) {\n    return undefined;\n  }\n\n  if (event.type === EventOrGroupType.ERROR && isNativePlatform(event.platform)) {\n    return event.metadata.filename || undefined;\n  }\n\n  return undefined;\n}\n\nexport function getTreeLabelPartDetails(part: TreeLabelPart) {\n  // Note: This function also exists in Python in eventtypes/base.py, to make\n  // porting efforts simpler it's recommended to keep both variants\n  // structurally similar.\n  if (typeof part === 'string') {\n    return part;\n  }\n\n  const label = part?.function || part?.package || part?.filebase || part?.type;\n  const classbase = part?.classbase;\n\n  if (classbase) {\n    return label ? `${classbase}.${label}` : classbase;\n  }\n\n  return label || '<unknown>';\n}\n\nfunction computeTitleWithTreeLabel(metadata: EventMetadata) {\n  const {type, current_tree_label, finest_tree_label} = metadata;\n\n  const treeLabel = current_tree_label || finest_tree_label;\n\n  const formattedTreeLabel = treeLabel\n    ? treeLabel.map(labelPart => getTreeLabelPartDetails(labelPart)).join(' | ')\n    : undefined;\n\n  if (!type) {\n    return {\n      title: formattedTreeLabel || metadata.function || '<unknown>',\n      treeLabel,\n    };\n  }\n\n  if (!formattedTreeLabel) {\n    return {title: type, treeLabel: undefined};\n  }\n\n  return {\n    title: `${type} | ${formattedTreeLabel}`,\n    treeLabel: [{type}, ...(treeLabel ?? [])],\n  };\n}\n\nexport function getTitle(\n  event: Event | BaseGroup,\n  features: string[] = [],\n  grouping = false\n) {\n  const {metadata, type, culprit} = event;\n\n  const customTitle =\n    features.includes('custom-event-title') && metadata?.title\n      ? metadata.title\n      : undefined;\n\n  switch (type) {\n    case EventOrGroupType.ERROR: {\n      if (customTitle) {\n        return {\n          title: customTitle,\n          subtitle: culprit,\n          treeLabel: undefined,\n        };\n      }\n\n      const displayTitleWithTreeLabel =\n        features.includes('grouping-title-ui') &&\n        (grouping ||\n          isNativePlatform(event.platform) ||\n          isMobilePlatform(event.platform));\n\n      if (displayTitleWithTreeLabel) {\n        return {\n          subtitle: culprit,\n          ...computeTitleWithTreeLabel(metadata),\n        };\n      }\n\n      return {\n        subtitle: culprit,\n        title: metadata.type || metadata.function || '<unknown>',\n        treeLabel: undefined,\n      };\n    }\n    case EventOrGroupType.CSP:\n      return {\n        title: customTitle ?? metadata.directive ?? '',\n        subtitle: metadata.uri ?? '',\n        treeLabel: undefined,\n      };\n    case EventOrGroupType.EXPECTCT:\n    case EventOrGroupType.EXPECTSTAPLE:\n    case EventOrGroupType.HPKP:\n      // Due to a regression some reports did not have message persisted\n      // (https://github.com/getsentry/sentry/pull/19794) so we need to fall\n      // back to the computed title for these.\n      return {\n        title: customTitle ?? (metadata.message || event.title),\n        subtitle: metadata.origin ?? '',\n        treeLabel: undefined,\n      };\n    case EventOrGroupType.DEFAULT:\n      return {\n        title: customTitle ?? metadata.title ?? '',\n        subtitle: '',\n        treeLabel: undefined,\n      };\n    default:\n      return {\n        title: customTitle ?? event.title,\n        subtitle: '',\n        treeLabel: undefined,\n      };\n  }\n}\n\n/**\n * Returns a short eventId with only 8 characters\n */\nexport function getShortEventId(eventId: string) {\n  return eventId.substring(0, 8);\n}\n","import {mobile} from 'sentry/data/platformCategories';\n\nexport function isNativePlatform(platform: string | undefined) {\n  switch (platform) {\n    case 'cocoa':\n    case 'objc':\n    case 'native':\n    case 'swift':\n    case 'c':\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isMobilePlatform(platform: string | undefined) {\n  if (!platform) {\n    return false;\n  }\n\n  return ([...mobile] as string[]).includes(platform);\n}\n","import {createContext} from 'react';\n\nimport {Organization} from 'sentry/types';\n\nexport const OrganizationContext = createContext<Organization | null>(null);\n"],"names":["Hook","name","props","HookComponent","Component","hooks","HookStore","map","cb","hookName","this","handleHooks","undefined","componentWillUnmount","unsubscribe","setState","render","children","state","length","parseHtmlMarks","key","htmlString","markTags","highlightPreTag","highlightPostTag","indices","value","openIndex","indexOf","openIndexEnd","slice","closeIndex","closeIndexEnd","push","MARK_TAGS","HelpSource","loading","results","SentryGlobalSearch","debounce","unbouncedSearch","componentDidMount","query","doSearch","componentDidUpdate","nextProps","platforms","items","forEach","section","sectionItems","hits","hit","title","description","text","item","sourceType","resultType","site","dompurify","extra","context","context1","to","url","matches","score","refIndex","sectionHeading","sectionCount","emptyHeaderItem","empty","mapSearchResults","search","platform","standardSDKSlug","slug","isLoading","withLatestContext","withRouter","renderResult","itemProps","highlighted","SectionHeading","t","Count","tn","Fragment","Empty","HelpSearch","sources","minSearch","closeOnSelect","renderItem","space","p","theme","backgroundSecondary","innerBorder","fontSizeSmall","gray300","subText","fontSizeMedium","HelpSearchModal","Body","closeModal","organization","placeholder","useTheme","css","injectedCss","entryPoint","dropdownClassName","border","renderInput","getInputProps","InputWrapper","Input","autoFocus","type","resultFooter","modalCss","withOrganization","getDefaultSelection","projects","environments","datetime","start","end","period","DEFAULT_STATS_PERIOD","utc","extractSelectionParameters","pickBy","pick","Object","values","URL_PARAM","identity","isSelectionEqual","selection","other","isEqual","toString","Truncate","isExpanded","maxLength","className","leftTrim","trimRegex","minLength","expandable","expandDirection","isTruncated","shortValue","slicedValue","valueIndex","match","lastIndex","lastIndexOf","Wrapper","onMouseOver","onFocus","onMouseOut","onBlur","FullValue","expanded","background","zIndex","truncationFullValue","route","fields","label","help","showReturnButton","allEventMap","growthEventMap","issueEventMap","performanceEventMap","dashboardsEventMap","discoverEventMap","workflowEventMap","searchEventMap","settingsEventMap","coreUIEventMap","samplingEventMap","makeAnalyticsFunction","isTombstone","maybe","hasOwnProperty","getMessage","event","culprit","metadata","EventOrGroupType","message","getLocation","isNativePlatform","filename","getTreeLabelPartDetails","part","function","package","filebase","classbase","computeTitleWithTreeLabel","current_tree_label","finest_tree_label","treeLabel","formattedTreeLabel","labelPart","join","getTitle","features","grouping","customTitle","includes","subtitle","isMobilePlatform","directive","uri","origin","getShortEventId","eventId","substring","mobile","OrganizationContext","createContext"],"sourceRoot":""}