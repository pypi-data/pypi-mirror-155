{"version":3,"file":"chunks/app_components_forms_teamSelector_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"whCAoBA,MAAMA,GAAoB,OAAO,MAAP,sBAAH,0DAKjBC,GAAiB,OAAOC,EAAAA,GAAP,sBAAH,gBACHC,EAAAA,EAAAA,GAAM,KADH,kBAEFA,EAAAA,EAAAA,GAAM,GAFJ,WAGTC,GAAKA,EAAEC,MAAMC,SAHJ,KAOdC,EAAmB,CACvBC,MAAO,KACPC,OACE,QAACT,EAAD,YACE,QAACC,EAAD,CAAgBS,KAAK,UACpBC,EAAAA,EAAAA,GAAE,iBAGPC,UAAW,aACXC,MAAO,KACPC,UAAU,GAINC,EAAuC,CAC3CC,OAAQ,CAACC,EAAUC,KAAX,IACHD,EACHE,IAAK,CACHC,MAAOF,EAAMG,YAAcH,EAAMb,MAAMiB,UAKvCC,EAAwC,CAC5CC,MAAO,CAACP,EAAUC,KAAX,IACFD,EACHQ,QAAS,OACTC,oBAAqB,kBACrBC,WAAY,SACZC,SAASzB,EAAAA,EAAAA,GAAM,GACf,UAAW,CACT0B,gBAAiBX,EAAMb,MAAMyB,oBAC7BC,OAAQ,GACRC,MAAO,GACPC,aAAc,EACdC,QAAS,KACTT,QAAS,WAGbU,YAAalB,IAAY,IACpBA,EACHmB,YAAa,MAsCjB,SAASC,EAAaC,GACpB,MAAM,kBAACC,EAAD,OAAoBC,KAAWC,GAAcH,GAC7C,WAACI,EAAD,aAAaC,EAAb,QAA2BC,EAA3B,SAAoCC,EAApC,MAA8CrC,EAA9C,MAAqDsC,EAArD,SAA4DC,GAAYT,EAExEU,GAAMC,EAAAA,EAAAA,MACN,MAACC,EAAD,SAAQC,EAAR,SAAkBC,IAAYC,EAAAA,EAAAA,KAG9BC,GAAYC,EAAAA,EAAAA,QAAY,MAExBC,EAAoBC,IAAD,CACvBjD,MAAOsC,EAAQW,EAAKC,GAAKD,EAAKE,KAC9BlD,MAAOoC,EAAY,IAAGY,EAAKE,QAAS,QAAC,IAAD,CAASF,KAAMA,IACnD7C,UAAW6C,EAAKE,KAChB9C,MAAO,CACL+C,KAAM,OACNF,GAAID,EAAKC,GACTG,KAAMJ,EAAKE,QAQf,SAASG,IACP,IAAKR,EAAUS,QACb,OAGF,MACMvC,EADS8B,EAAUS,QAAQC,OACMC,SAEnCzC,GAEFA,EAAM0C,OAyBV,SAASC,EAA+BV,GAEtC,GAAIjD,KAAWsC,EAAQW,EAAKC,GAAKD,EAAKE,MACpC,OAAOH,EAAiBC,GAE1B,MAAMW,EAAazB,EAAa0B,OAAOC,SAAS,iBAEhD,MAAO,IACFd,EAAiBC,GACpB3C,UAAU,EACVL,OACE,QAAC8D,EAAD,WACE,QAACC,EAAD,WACE,QAAC,IAAD,CACEC,SAAS,OACTC,OAAO/D,EAAAA,EAAAA,GAAE,gCAAkC,IAAG8C,EAAKE,QAFrD,UAIE,QAAC,IAAD,CAASF,KAAMA,UAKvBkB,eACE,QAAC,IAAD,CACED,MACEN,GACIzD,EAAAA,EAAAA,GAAE,oBAAsB,IAAG8C,EAAKE,SAChChD,EAAAA,EAAAA,GAAE,sDAERiE,qBAAqB,OANvB,UAQE,QAACC,EAAD,CACEjB,KAAK,SACLlD,KAAK,OACLoE,YAAU,EACVhE,UAAWsD,EACXW,QAAS,IAzDnBC,eAAsCvB,GACpC,IAAKb,EAEH,YADAkB,IAKF,MAAMmB,EAAWpC,EAAW,IAAKrC,MAAAA,EAAAA,EAAS,IAAO,CAACA,MAAAA,GAElDuC,MAAAA,GAAAA,EAAWS,EAAiBC,IAE5B,UACQyB,EAAAA,EAAAA,IAAiBlC,EAAKL,EAAagB,KAAMf,EAAQe,KAAMF,GAC7D,MAAO0B,GAEPpC,MAAAA,GAAAA,EAAWkC,GAGbnB,IAuCuBsB,CAAuB3B,GACtC4B,MAAM,QAAC,KAAD,CAASC,WAAS,IACxB,cAAY3E,EAAAA,EAAAA,GAAE,oBAAsB,IAAG8C,EAAKE,YAIlD4B,6BAA6B,GAkCjC,OACE,QAAC,IAAD,CACEC,IAAKlC,EACLmC,QAjCJ,WACE,MACMC,GADcC,EAAAA,EAAAA,KAEhBzC,EACAR,EACAQ,EAAM0C,OAAOlD,GACbQ,EAEJ,GAAIN,EAAS,CACX,MAAMiD,EAAsB,IAAIC,IAAIlD,EAAQM,MAAM6C,KAAItC,GAAQA,EAAKC,MAC7DsC,EAAiBN,EAAcE,QAAOnC,GAC1CoC,EAAoBI,IAAIxC,EAAKC,MAEzBwC,EAAoBR,EAAcE,QACtCnC,IAASoC,EAAoBI,IAAIxC,EAAKC,MAGxC,MAAO,IACFsC,EAAeD,IAAIvC,MACnB0C,EAAkBH,IAAI5B,MACrB5B,EAAoB,CAAChC,GAAoB,IAIjD,MAAO,IACFmF,EAAcK,IAAIvC,MACjBjB,EAAoB,CAAChC,GAAoB,IAOpC4F,GACTC,cAAeC,GAAAA,EAASC,IAAYlD,EAASkD,KAAMC,EAAAA,IACnDC,iBAAkBxF,KAAYA,EAAOF,SACrC2F,eAAgBzF,GAAUA,EAAOJ,UACjC4B,OAAQ,IACFD,EAAoBxB,EAAyB,MAC7C8B,EAAW,GAAKtB,KAChBiB,MAAAA,EAAAA,EAAU,IAEhBkE,UAAWvD,KACPV,IArJDJ,EAAAA,YAAAA,eA0JT,MAAMkC,GAAqB,OAAO,MAAP,sBAAH,2FAMlBC,GAAgB,OAAO,MAAP,sBAAH,mEAMbK,GAAqB,OAAO8B,EAAAA,GAAP,sBAAH,wCAOxB,GAAeC,EAAAA,EAAAA,GAAiBvE","sources":["webpack:///./app/components/forms/teamSelector.tsx"],"sourcesContent":["import {useRef} from 'react';\nimport {StylesConfig} from 'react-select';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\n\nimport {addTeamToProject} from 'sentry/actionCreators/projects';\nimport Button from 'sentry/components/button';\nimport SelectControl, {ControlProps} from 'sentry/components/forms/selectControl';\nimport IdBadge from 'sentry/components/idBadge';\nimport Tooltip from 'sentry/components/tooltip';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'sentry/constants';\nimport {IconAdd, IconUser} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project, Team} from 'sentry/types';\nimport {isActiveSuperuser} from 'sentry/utils/isActiveSuperuser';\nimport useApi from 'sentry/utils/useApi';\nimport useTeams from 'sentry/utils/useTeams';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nconst UnassignedWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledIconUser = styled(IconUser)`\n  margin-left: ${space(0.25)};\n  margin-right: ${space(1)};\n  color: ${p => p.theme.gray400};\n`;\n\n// An option to be unassigned on the team dropdown\nconst unassignedOption = {\n  value: null,\n  label: (\n    <UnassignedWrapper>\n      <StyledIconUser size=\"20px\" />\n      {t('Unassigned')}\n    </UnassignedWrapper>\n  ),\n  searchKey: 'unassigned',\n  actor: null,\n  disabled: false,\n};\n\n// Ensures that the svg icon is white when selected\nconst unassignedSelectStyles: StylesConfig = {\n  option: (provided, state) => ({\n    ...provided,\n    svg: {\n      color: state.isSelected && state.theme.white,\n    },\n  }),\n};\n\nconst placeholderSelectStyles: StylesConfig = {\n  input: (provided, state) => ({\n    ...provided,\n    display: 'grid',\n    gridTemplateColumns: 'max-content 1fr',\n    alignItems: 'center',\n    gridGap: space(1),\n    ':before': {\n      backgroundColor: state.theme.backgroundSecondary,\n      height: 24,\n      width: 24,\n      borderRadius: 3,\n      content: '\"\"',\n      display: 'block',\n    },\n  }),\n  placeholder: provided => ({\n    ...provided,\n    paddingLeft: 32,\n  }),\n};\n\ntype Props = {\n  onChange: (value: any) => any;\n  organization: Organization;\n  includeUnassigned?: boolean;\n  /**\n   * Can be used to restrict teams to a certain project and allow for new teams to be add to that project\n   */\n  project?: Project;\n  /**\n   * Function to control whether a team should be shown in the dropdown\n   */\n  teamFilter?: (team: Team) => boolean;\n  /**\n   * Controls whether the value in the dropdown is a team id or team slug\n   */\n  useId?: boolean;\n} & ControlProps;\n\ntype TeamActor = {\n  id: string;\n  name: string;\n  type: 'team';\n};\n\ntype TeamOption = {\n  actor: TeamActor | null;\n  label: React.ReactNode;\n  searchKey: string;\n  value: string | null;\n  disabled?: boolean;\n  trailingItems?: React.ReactNode;\n  trailingItemsSpanFullHeight?: boolean;\n};\n\nfunction TeamSelector(props: Props) {\n  const {includeUnassigned, styles, ...extraProps} = props;\n  const {teamFilter, organization, project, multiple, value, useId, onChange} = props;\n\n  const api = useApi();\n  const {teams, fetching, onSearch} = useTeams();\n\n  // TODO(ts) This type could be improved when react-select types are better.\n  const selectRef = useRef<any>(null);\n\n  const createTeamOption = (team: Team): TeamOption => ({\n    value: useId ? team.id : team.slug,\n    label: multiple ? `#${team.slug}` : <IdBadge team={team} />,\n    searchKey: team.slug,\n    actor: {\n      type: 'team',\n      id: team.id,\n      name: team.slug,\n    },\n  });\n\n  /**\n   * Closes the select menu by blurring input if possible since that seems to\n   * be the only way to close it.\n   */\n  function closeSelectMenu() {\n    if (!selectRef.current) {\n      return;\n    }\n\n    const select = selectRef.current.select;\n    const input: HTMLInputElement = select.inputRef;\n\n    if (input) {\n      // I don't think there's another way to close `react-select`\n      input.blur();\n    }\n  }\n\n  async function handleAddTeamToProject(team: Team) {\n    if (!project) {\n      closeSelectMenu();\n      return;\n    }\n\n    // Copy old value\n    const oldValue = multiple ? [...(value ?? [])] : {value};\n    // Optimistic update\n    onChange?.(createTeamOption(team));\n\n    try {\n      await addTeamToProject(api, organization.slug, project.slug, team);\n    } catch (err) {\n      // Unable to add team to project, revert select menu value\n      onChange?.(oldValue);\n    }\n\n    closeSelectMenu();\n  }\n\n  function createTeamOutsideProjectOption(team: Team): TeamOption {\n    // If the option/team is currently selected, optimistically assume it is now a part of the project\n    if (value === (useId ? team.id : team.slug)) {\n      return createTeamOption(team);\n    }\n    const canAddTeam = organization.access.includes('project:write');\n\n    return {\n      ...createTeamOption(team),\n      disabled: true,\n      label: (\n        <TeamOutsideProject>\n          <DisabledLabel>\n            <Tooltip\n              position=\"left\"\n              title={t('%s is not a member of project', `#${team.slug}`)}\n            >\n              <IdBadge team={team} />\n            </Tooltip>\n          </DisabledLabel>\n        </TeamOutsideProject>\n      ),\n      trailingItems: (\n        <Tooltip\n          title={\n            canAddTeam\n              ? t('Add %s to project', `#${team.slug}`)\n              : t('You do not have permission to add team to project.')\n          }\n          containerDisplayMode=\"flex\"\n        >\n          <AddToProjectButton\n            type=\"button\"\n            size=\"zero\"\n            borderless\n            disabled={!canAddTeam}\n            onClick={() => handleAddTeamToProject(team)}\n            icon={<IconAdd isCircled />}\n            aria-label={t('Add %s to project', `#${team.slug}`)}\n          />\n        </Tooltip>\n      ),\n      trailingItemsSpanFullHeight: true,\n    };\n  }\n\n  function getOptions() {\n    const isSuperuser = isActiveSuperuser();\n    const filteredTeams = isSuperuser\n      ? teams\n      : teamFilter\n      ? teams.filter(teamFilter)\n      : teams;\n\n    if (project) {\n      const teamsInProjectIdSet = new Set(project.teams.map(team => team.id));\n      const teamsInProject = filteredTeams.filter(team =>\n        teamsInProjectIdSet.has(team.id)\n      );\n      const teamsNotInProject = filteredTeams.filter(\n        team => !teamsInProjectIdSet.has(team.id)\n      );\n\n      return [\n        ...teamsInProject.map(createTeamOption),\n        ...teamsNotInProject.map(createTeamOutsideProjectOption),\n        ...(includeUnassigned ? [unassignedOption] : []),\n      ];\n    }\n\n    return [\n      ...filteredTeams.map(createTeamOption),\n      ...(includeUnassigned ? [unassignedOption] : []),\n    ];\n  }\n\n  return (\n    <SelectControl\n      ref={selectRef}\n      options={getOptions()}\n      onInputChange={debounce(val => void onSearch(val), DEFAULT_DEBOUNCE_DURATION)}\n      isOptionDisabled={option => !!option.disabled}\n      getOptionValue={option => option.searchKey}\n      styles={{\n        ...(includeUnassigned ? unassignedSelectStyles : {}),\n        ...(multiple ? {} : placeholderSelectStyles),\n        ...(styles ?? {}),\n      }}\n      isLoading={fetching}\n      {...extraProps}\n    />\n  );\n}\n\nconst TeamOutsideProject = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n`;\n\nconst DisabledLabel = styled('div')`\n  display: flex;\n  opacity: 0.5;\n  overflow: hidden; /* Needed so that \"Add to team\" button can fit */\n`;\n\nconst AddToProjectButton = styled(Button)`\n  flex-shrink: 0;\n`;\n\nexport {TeamSelector};\n\n// TODO(davidenwang): this is broken due to incorrect types on react-select\nexport default withOrganization(TeamSelector) as unknown as (\n  p: Omit<Props, 'organization'>\n) => JSX.Element;\n"],"names":["UnassignedWrapper","StyledIconUser","IconUser","space","p","theme","gray400","unassignedOption","value","label","size","t","searchKey","actor","disabled","unassignedSelectStyles","option","provided","state","svg","color","isSelected","white","placeholderSelectStyles","input","display","gridTemplateColumns","alignItems","gridGap","backgroundColor","backgroundSecondary","height","width","borderRadius","content","placeholder","paddingLeft","TeamSelector","props","includeUnassigned","styles","extraProps","teamFilter","organization","project","multiple","useId","onChange","api","useApi","teams","fetching","onSearch","useTeams","selectRef","useRef","createTeamOption","team","id","slug","type","name","closeSelectMenu","current","select","inputRef","blur","createTeamOutsideProjectOption","canAddTeam","access","includes","TeamOutsideProject","DisabledLabel","position","title","trailingItems","containerDisplayMode","AddToProjectButton","borderless","onClick","async","oldValue","addTeamToProject","err","handleAddTeamToProject","icon","isCircled","trailingItemsSpanFullHeight","ref","options","filteredTeams","isActiveSuperuser","filter","teamsInProjectIdSet","Set","map","teamsInProject","has","teamsNotInProject","getOptions","onInputChange","debounce","val","DEFAULT_DEBOUNCE_DURATION","isOptionDisabled","getOptionValue","isLoading","Button","withOrganization"],"sourceRoot":""}