{"version":3,"file":"chunks/app_views_teamCreate_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"+fAcA,SAASA,EAAT,GAA+D,IAAzC,SAACC,EAAD,WAAWC,EAAX,SAAuBC,GAAkB,EAC7D,MAAMC,GAAMC,EAAAA,EAAAA,KAaZ,OAXAC,EAAAA,EAAAA,YAAU,KACRC,SAASC,KAAKC,UAAUC,IAAI,UAErB,IAAMH,SAASC,KAAKC,UAAUE,OAAO,YAC3C,KAQD,eAAKC,UAAU,MAAf,WACE,eAAKA,UAAU,gBACf,eAAKA,UAAU,YAAYC,MAAO,CAACZ,SAAAA,GAAnC,UACE,eAAKW,UAAU,gBAAf,WACE,eAAKA,UAAU,aAAf,WACE,aAAGE,KAAK,IAAR,UACE,QAAC,KAAD,CAAYC,KAAK,SAElBb,IACC,aAAGU,UAAU,oBAAoBI,QAf7CC,uBACQC,EAAAA,EAAAA,IAAOd,GACbe,OAAOC,SAASC,OAAO,gBAab,UACE,QAACC,EAAD,WAASC,EAAAA,EAAAA,GAAE,oBAIjB,eAAKX,UAAU,2BAAf,SAA2CT,YA7B5CH,EAAAA,YAAAA,eAoCT,MAAMsB,GAAS,OAAO,OAAP,qBAAH,cACGE,GAAKA,EAAEC,MAAMC,eADhB,KAIZ,K,2VCnCA,SAASC,EAAT,GAAoE,IAA5C,aAACC,EAAD,UAAeC,KAAcC,GAAe,EAClE,OACE,QAAC,EAAAC,SAAD,YACE,uBACGR,EAAAA,EAAAA,GACC,2GAIJ,QAAC,IAAD,CACES,aAAaT,EAAAA,EAAAA,GAAE,eACfU,YAAc,kBAAiBL,EAAaM,cAC5CC,UAAU,OACVC,SAAU,CAACC,EAAMC,EAAWC,KAAlB,uBACRT,EAAMM,gBADE,aACR,OAAAN,EAAiBO,EAAiBC,EAAWC,IAE/CC,gBAAiBH,IAAI,uBAAIP,EAAMQ,iBAAV,aAAI,OAAAR,EAAkBO,IAC3CI,gBAAc,EACd,eAAa,sBACTZ,EAVN,UAYE,QAAC,IAAD,CACEa,KAAK,OACLC,OAAOpB,EAAAA,EAAAA,GAAE,aACTqB,aAAarB,EAAAA,EAAAA,GAAE,0CACfsB,MAAMtB,EAAAA,EAAAA,GAAE,mEACRuB,UAAQ,EACRC,SAAO,EACPC,0BAAwB,EACxBC,QAAQ,EACRC,eAAgBC,EAAAA,SA9BjBxB,EAAAA,YAAAA,iBAqCT,W,oCCtDe,SAASwB,EAAQC,GAC9B,MAAsB,iBAARA,EAAmBA,EAAIC,cAAcC,QAAQ,IAAK,KAAO,G,kUCG1D,MAAMC,UAGXC,EAAAA,EACRC,WACE,MAAO,GAGTC,SACE,OACE,QAAC,IAAD,CAAqBC,MAAOC,KAAKH,WAAjC,SACGG,KAAKC,qBAXON,EAAAA,YAAAA,a,gjBCOrB,MAAMO,UAAmBP,EAAAA,EAAiB,sEASlBlB,IACpB,MAAM,MAAC0B,GAASH,KAAK9B,MAAMkC,OACrBC,EAAe,aAAYF,WAAe1B,EAAKH,QACrD0B,KAAK9B,MAAMoC,OAAOC,KAAKF,MAXzBR,WACE,OAAOlC,EAAAA,EAAAA,GAAE,eAGX6C,eACE,MAAO,GASTC,aACE,OACE,QAAC,IAAD,YACE,wBAAK9C,EAAAA,EAAAA,GAAE,wBAEP,QAAC,IAAD,CACEe,UAAWsB,KAAKU,oBAChB1C,aAAcgC,KAAK9B,MAAMF,mBAQnC,SAAe2C,EAAAA,EAAAA,aAAWC,EAAAA,EAAAA,GAAiBV","sources":["webpack:///./app/components/narrowLayout.tsx","webpack:///./app/components/teams/createTeamForm.tsx","webpack:///./app/utils/slugify.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/teamCreate.tsx"],"sourcesContent":["import {useEffect} from 'react';\nimport styled from '@emotion/styled';\n\nimport {logout} from 'sentry/actionCreators/account';\nimport {IconSentry} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport useApi from 'sentry/utils/useApi';\n\ntype Props = {\n  children: React.ReactNode;\n  maxWidth?: string;\n  showLogout?: boolean;\n};\n\nfunction NarrowLayout({maxWidth, showLogout, children}: Props) {\n  const api = useApi();\n\n  useEffect(() => {\n    document.body.classList.add('narrow');\n\n    return () => document.body.classList.remove('narrow');\n  }, []);\n\n  async function handleLogout() {\n    await logout(api);\n    window.location.assign('/auth/login');\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"pattern-bg\" />\n      <div className=\"container\" style={{maxWidth}}>\n        <div className=\"box box-modal\">\n          <div className=\"box-header\">\n            <a href=\"/\">\n              <IconSentry size=\"lg\" />\n            </a>\n            {showLogout && (\n              <a className=\"logout pull-right\" onClick={handleLogout}>\n                <Logout>{t('Sign out')}</Logout>\n              </a>\n            )}\n          </div>\n          <div className=\"box-content with-padding\">{children}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst Logout = styled('span')`\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n\nexport default NarrowLayout;\n","import {Fragment} from 'react';\n\nimport Form from 'sentry/components/forms/form';\nimport TextField from 'sentry/components/forms/textField';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport slugify from 'sentry/utils/slugify';\n\ntype Payload = {\n  slug: string;\n};\n\ntype Props = {\n  organization: Organization;\n  formProps?: Partial<typeof Form>;\n  onSubmit?: (data: Payload, onSuccess: Function, onError: Function) => void;\n  onSuccess?: (data: Payload) => void;\n};\n\nfunction CreateTeamForm({organization, formProps, ...props}: Props) {\n  return (\n    <Fragment>\n      <p>\n        {t(\n          'Members of a team have access to specific areas, such as a new release or a new application feature.'\n        )}\n      </p>\n\n      <Form\n        submitLabel={t('Create Team')}\n        apiEndpoint={`/organizations/${organization.slug}/teams/`}\n        apiMethod=\"POST\"\n        onSubmit={(data, onSuccess, onError) =>\n          props.onSubmit?.(data as Payload, onSuccess, onError)\n        }\n        onSubmitSuccess={data => props.onSuccess?.(data)}\n        requireChanges\n        data-test-id=\"create-team-form\"\n        {...formProps}\n      >\n        <TextField\n          name=\"slug\"\n          label={t('Team Name')}\n          placeholder={t('e.g. operations, web-frontend, desktop')}\n          help={t('May contain lowercase letters, numbers, dashes and underscores.')}\n          required\n          stacked\n          flexibleControlStateSize\n          inline={false}\n          transformInput={slugify}\n        />\n      </Form>\n    </Fragment>\n  );\n}\n\nexport default CreateTeamForm;\n","// XXX: This is NOT an exhaustive slugify function\n// Only forces lowercase and replaces spaces with hyphens\nexport default function slugify(str: any): string {\n  return typeof str === 'string' ? str.toLowerCase().replace(' ', '-') : '';\n}\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {withRouter, WithRouterProps} from 'react-router';\n\nimport NarrowLayout from 'sentry/components/narrowLayout';\nimport CreateTeamForm from 'sentry/components/teams/createTeamForm';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\n\ntype Props = WithRouterProps<{orgId: string}, {}> & {\n  organization: Organization;\n};\n\nclass TeamCreate extends AsyncView<Props> {\n  getTitle() {\n    return t('Create Team');\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [];\n  }\n\n  handleSubmitSuccess = data => {\n    const {orgId} = this.props.params;\n    const redirectUrl = `/settings/${orgId}/teams/${data.slug}/`;\n    this.props.router.push(redirectUrl);\n  };\n\n  renderBody() {\n    return (\n      <NarrowLayout>\n        <h3>{t('Create a New Team')}</h3>\n\n        <CreateTeamForm\n          onSuccess={this.handleSubmitSuccess}\n          organization={this.props.organization}\n        />\n      </NarrowLayout>\n    );\n  }\n}\n\nexport {TeamCreate};\nexport default withRouter(withOrganization(TeamCreate));\n"],"names":["NarrowLayout","maxWidth","showLogout","children","api","useApi","useEffect","document","body","classList","add","remove","className","style","href","size","onClick","async","logout","window","location","assign","Logout","t","p","theme","fontSizeLarge","CreateTeamForm","organization","formProps","props","Fragment","submitLabel","apiEndpoint","slug","apiMethod","onSubmit","data","onSuccess","onError","onSubmitSuccess","requireChanges","name","label","placeholder","help","required","stacked","flexibleControlStateSize","inline","transformInput","slugify","str","toLowerCase","replace","AsyncView","AsyncComponent","getTitle","render","title","this","renderComponent","TeamCreate","orgId","params","redirectUrl","router","push","getEndpoints","renderBody","handleSubmitSuccess","withRouter","withOrganization"],"sourceRoot":""}