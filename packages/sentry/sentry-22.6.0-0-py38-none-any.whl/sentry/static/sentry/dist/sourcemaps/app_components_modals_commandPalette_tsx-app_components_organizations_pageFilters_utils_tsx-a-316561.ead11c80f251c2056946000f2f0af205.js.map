{"version":3,"file":"chunks/app_components_modals_commandPalette_tsx-app_components_organizations_pageFilters_utils_tsx-a-316561.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/modals/commandPalette.tsx","webpack:///./app/components/organizations/pageFilters/utils.tsx","webpack:///./app/components/truncate.tsx","webpack:///./app/data/forms/accountEmails.tsx","webpack:///./app/utils/analytics/trackAdvancedAnalyticsEvent.tsx","webpack:///./app/utils/events.tsx","webpack:///./app/utils/platform.tsx","webpack:///./app/views/organizationContext.tsx"],"sourcesContent":["import {useEffect} from 'react';\nimport {ClassNames, css, useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport Input from 'sentry/components/forms/controls/input';\nimport {Search} from 'sentry/components/search';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {analytics} from 'sentry/utils/analytics';\n\nfunction CommandPalette({Body}: ModalRenderProps) {\n  const theme = useTheme();\n\n  useEffect(() => void analytics('omnisearch.open', {}), []);\n\n  return (\n    <Body>\n      <ClassNames>\n        {({css: injectedCss}) => (\n          <Search\n            entryPoint=\"command_palette\"\n            minSearch={1}\n            maxResults={10}\n            dropdownClassName={injectedCss`\n                width: 100%;\n                border: transparent;\n                border-top-left-radius: 0;\n                border-top-right-radius: 0;\n                position: initial;\n                box-shadow: none;\n                border-top: 1px solid ${theme.border};\n              `}\n            renderInput={({getInputProps}) => (\n              <InputWrapper>\n                <StyledInput\n                  autoFocus\n                  {...getInputProps({\n                    type: 'text',\n                    placeholder: t('Search for projects, teams, settings, etc...'),\n                  })}\n                />\n              </InputWrapper>\n            )}\n          />\n        )}\n      </ClassNames>\n    </Body>\n  );\n}\n\nexport default CommandPalette;\n\nexport const modalCss = css`\n  [role='document'] {\n    padding: 0;\n  }\n`;\n\nconst InputWrapper = styled('div')`\n  padding: ${space(0.25)};\n`;\n\nconst StyledInput = styled(Input)`\n  width: 100%;\n  padding: ${space(1)};\n  border-radius: 8px;\n\n  outline: none;\n  border: none;\n  box-shadow: none;\n\n  :focus,\n  :active,\n  :hover {\n    outline: none;\n    border: none;\n    box-shadow: none;\n  }\n`;\n","import {Location} from 'history';\nimport identity from 'lodash/identity';\nimport isEqual from 'lodash/isEqual';\nimport pick from 'lodash/pick';\nimport pickBy from 'lodash/pickBy';\n\nimport {DEFAULT_STATS_PERIOD} from 'sentry/constants';\nimport {DATE_TIME_KEYS, URL_PARAM} from 'sentry/constants/pageFilters';\nimport {PageFilters} from 'sentry/types';\n\n/**\n * Make a default page filters object\n */\nexport function getDefaultSelection(): PageFilters {\n  const datetime = {\n    start: null,\n    end: null,\n    period: DEFAULT_STATS_PERIOD,\n    utc: null,\n  };\n\n  return {\n    projects: [],\n    environments: [],\n    datetime,\n  };\n}\n\n/**\n * Extract the page filter parameters from an object\n * Useful for extracting page filter properties from the current URL\n * when building another URL.\n */\nexport function extractSelectionParameters(query: Location['query']) {\n  return pickBy(pick(query, Object.values(URL_PARAM)), identity);\n}\n\n/**\n * Extract the page filter datetime parameters from an object.\n */\nexport function extractDatetimeSelectionParameters(query: Location['query']) {\n  return pickBy(pick(query, Object.values(DATE_TIME_KEYS)), identity);\n}\n\n/**\n * Compare the non-utc values of two selections.\n * Useful when re-fetching data based on page filters changing.\n *\n * utc is not compared as there is a problem somewhere in the selection\n * data flow that results in it being undefined | null | boolean instead of null | boolean.\n * The additional undefined state makes this function just as unreliable as isEqual(selection, other)\n */\nexport function isSelectionEqual(selection: PageFilters, other: PageFilters): boolean {\n  if (\n    !isEqual(selection.projects, other.projects) ||\n    !isEqual(selection.environments, other.environments)\n  ) {\n    return false;\n  }\n\n  // Use string comparison as we aren't interested in the identity of the datetimes.\n  if (\n    selection.datetime.period !== other.datetime.period ||\n    selection.datetime.start?.toString() !== other.datetime.start?.toString() ||\n    selection.datetime.end?.toString() !== other.datetime.end?.toString()\n  ) {\n    return false;\n  }\n\n  return true;\n}\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\ntype DefaultProps = {\n  className: string;\n  expandDirection: 'left' | 'right';\n  expandable: boolean;\n  leftTrim: boolean;\n  maxLength: number;\n  minLength: number;\n};\n\ntype Props = DefaultProps & {\n  value: string;\n  trimRegex?: RegExp;\n};\n\ntype State = {\n  isExpanded: boolean;\n};\n\nclass Truncate extends Component<Props, State> {\n  static defaultProps: DefaultProps = {\n    className: '',\n    minLength: 15,\n    maxLength: 50,\n    leftTrim: false,\n    expandable: true,\n    expandDirection: 'right',\n  };\n\n  state: State = {\n    isExpanded: false,\n  };\n\n  onFocus = () => {\n    const {value, maxLength} = this.props;\n    if (value.length <= maxLength) {\n      return;\n    }\n    this.setState({isExpanded: true});\n  };\n\n  onBlur = () => {\n    if (this.state.isExpanded) {\n      this.setState({isExpanded: false});\n    }\n  };\n\n  render() {\n    const {\n      className,\n      leftTrim,\n      trimRegex,\n      minLength,\n      maxLength,\n      value,\n      expandable,\n      expandDirection,\n    } = this.props;\n    const isTruncated = value.length > maxLength;\n    let shortValue: React.ReactNode = '';\n\n    if (isTruncated) {\n      const slicedValue = leftTrim\n        ? value.slice(value.length - (maxLength - 4), value.length)\n        : value.slice(0, maxLength - 4);\n\n      // Try to trim to values from the regex\n      if (trimRegex && leftTrim) {\n        const valueIndex = slicedValue.search(trimRegex);\n        shortValue = (\n          <span>\n            …{' '}\n            {valueIndex > 0 && valueIndex <= maxLength - minLength\n              ? slicedValue.slice(slicedValue.search(trimRegex), slicedValue.length)\n              : slicedValue}\n          </span>\n        );\n      } else if (trimRegex && !leftTrim) {\n        const matches = slicedValue.match(trimRegex);\n        let lastIndex = matches\n          ? slicedValue.lastIndexOf(matches[matches.length - 1]) + 1\n          : slicedValue.length;\n        if (lastIndex <= minLength) {\n          lastIndex = slicedValue.length;\n        }\n        shortValue = <span>{slicedValue.slice(0, lastIndex)} …</span>;\n      } else if (leftTrim) {\n        shortValue = <span>… {slicedValue}</span>;\n      } else {\n        shortValue = <span>{slicedValue} …</span>;\n      }\n    } else {\n      shortValue = value;\n    }\n\n    return (\n      <Wrapper\n        className={className}\n        onMouseOver={expandable ? this.onFocus : undefined}\n        onMouseOut={expandable ? this.onBlur : undefined}\n        onFocus={expandable ? this.onFocus : undefined}\n        onBlur={expandable ? this.onBlur : undefined}\n      >\n        <span>{shortValue}</span>\n        {isTruncated && (\n          <FullValue expanded={this.state.isExpanded} expandDirection={expandDirection}>\n            {value}\n          </FullValue>\n        )}\n      </Wrapper>\n    );\n  }\n}\n\nconst Wrapper = styled('span')`\n  position: relative;\n`;\n\nexport const FullValue = styled('span')<{\n  expandDirection: 'left' | 'right';\n  expanded: boolean;\n}>`\n  display: none;\n  position: absolute;\n  background: ${p => p.theme.background};\n  padding: ${space(0.5)};\n  border: 1px solid ${p => p.theme.innerBorder};\n  white-space: nowrap;\n  border-radius: ${space(0.5)};\n  top: -5px;\n  ${p => p.expandDirection === 'left' && 'right: -5px;'}\n  ${p => p.expandDirection === 'right' && 'left: -5px;'}\n\n  ${p =>\n    p.expanded &&\n    `\n    z-index: ${p.theme.zIndex.truncationFullValue};\n    display: block;\n    `}\n`;\n\nexport default Truncate;\n","import {JsonFormObject} from 'sentry/components/forms/type';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/account/emails/';\n\nconst formGroups: JsonFormObject[] = [\n  {\n    // Form \"section\"/\"panel\"\n    title: 'Add Secondary Emails',\n    fields: [\n      {\n        name: 'email',\n        type: 'string',\n\n        // additional data/props that is related to rendering of form field rather than data\n        label: 'Additional Email',\n        placeholder: 'e.g. secondary@example.com',\n        help: 'Designate an alternative email for this account',\n        showReturnButton: true,\n      },\n    ],\n  },\n];\n\nexport default formGroups;\n","import {coreUIEventMap, CoreUIEventParameters} from './coreuiAnalyticsEvents';\nimport {dashboardsEventMap, DashboardsEventParameters} from './dashboardsAnalyticsEvents';\nimport {discoverEventMap, DiscoverEventParameters} from './discoverAnalyticsEvents';\nimport {growthEventMap, GrowthEventParameters} from './growthAnalyticsEvents';\nimport {issueEventMap, IssueEventParameters} from './issueAnalyticsEvents';\nimport makeAnalyticsFunction from './makeAnalyticsFunction';\nimport {\n  performanceEventMap,\n  PerformanceEventParameters,\n} from './performanceAnalyticsEvents';\nimport {samplingEventMap, SamplingEventParameters} from './samplingAnalyticsEvents';\nimport {searchEventMap, SearchEventParameters} from './searchAnalyticsEvents';\nimport {settingsEventMap, SettingsEventParameters} from './settingsAnalyticsEvents';\nimport {TeamInsightsEventParameters, workflowEventMap} from './workflowAnalyticsEvents';\n\ntype EventParameters = GrowthEventParameters &\n  IssueEventParameters &\n  PerformanceEventParameters &\n  DashboardsEventParameters &\n  DiscoverEventParameters &\n  TeamInsightsEventParameters &\n  SearchEventParameters &\n  SettingsEventParameters &\n  CoreUIEventParameters &\n  SamplingEventParameters;\n\nconst allEventMap = {\n  ...growthEventMap,\n  ...issueEventMap,\n  ...performanceEventMap,\n  ...dashboardsEventMap,\n  ...discoverEventMap,\n  ...workflowEventMap,\n  ...searchEventMap,\n  ...settingsEventMap,\n  ...coreUIEventMap,\n  ...samplingEventMap,\n};\n\n/**\n * Generic typed analytics function for growth, issue, and performance events.\n * Can split up analytics functions to a smaller set of events like we do for trackIntegrationAnalytics\n */\nconst trackAdvancedAnalyticsEvent = makeAnalyticsFunction<EventParameters>(allEventMap);\n\nexport default trackAdvancedAnalyticsEvent;\n","import {\n  BaseGroup,\n  EventMetadata,\n  EventOrGroupType,\n  GroupTombstone,\n  TreeLabelPart,\n} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {isMobilePlatform, isNativePlatform} from 'sentry/utils/platform';\n\nfunction isTombstone(maybe: BaseGroup | Event | GroupTombstone): maybe is GroupTombstone {\n  return !maybe.hasOwnProperty('type');\n}\n\n/**\n * Extract the display message from an event.\n */\nexport function getMessage(\n  event: Event | BaseGroup | GroupTombstone\n): string | undefined {\n  if (isTombstone(event)) {\n    return event.culprit || '';\n  }\n\n  const {metadata, type, culprit} = event;\n\n  switch (type) {\n    case EventOrGroupType.ERROR:\n      return metadata.value;\n    case EventOrGroupType.CSP:\n      return metadata.message;\n    case EventOrGroupType.EXPECTCT:\n    case EventOrGroupType.EXPECTSTAPLE:\n    case EventOrGroupType.HPKP:\n      return '';\n    default:\n      return culprit || '';\n  }\n}\n\n/**\n * Get the location from an event.\n */\nexport function getLocation(event: Event | BaseGroup | GroupTombstone) {\n  if (isTombstone(event)) {\n    return undefined;\n  }\n\n  if (event.type === EventOrGroupType.ERROR && isNativePlatform(event.platform)) {\n    return event.metadata.filename || undefined;\n  }\n\n  return undefined;\n}\n\nexport function getTreeLabelPartDetails(part: TreeLabelPart) {\n  // Note: This function also exists in Python in eventtypes/base.py, to make\n  // porting efforts simpler it's recommended to keep both variants\n  // structurally similar.\n  if (typeof part === 'string') {\n    return part;\n  }\n\n  const label = part?.function || part?.package || part?.filebase || part?.type;\n  const classbase = part?.classbase;\n\n  if (classbase) {\n    return label ? `${classbase}.${label}` : classbase;\n  }\n\n  return label || '<unknown>';\n}\n\nfunction computeTitleWithTreeLabel(metadata: EventMetadata) {\n  const {type, current_tree_label, finest_tree_label} = metadata;\n\n  const treeLabel = current_tree_label || finest_tree_label;\n\n  const formattedTreeLabel = treeLabel\n    ? treeLabel.map(labelPart => getTreeLabelPartDetails(labelPart)).join(' | ')\n    : undefined;\n\n  if (!type) {\n    return {\n      title: formattedTreeLabel || metadata.function || '<unknown>',\n      treeLabel,\n    };\n  }\n\n  if (!formattedTreeLabel) {\n    return {title: type, treeLabel: undefined};\n  }\n\n  return {\n    title: `${type} | ${formattedTreeLabel}`,\n    treeLabel: [{type}, ...(treeLabel ?? [])],\n  };\n}\n\nexport function getTitle(\n  event: Event | BaseGroup,\n  features: string[] = [],\n  grouping = false\n) {\n  const {metadata, type, culprit} = event;\n\n  const customTitle =\n    features.includes('custom-event-title') && metadata?.title\n      ? metadata.title\n      : undefined;\n\n  switch (type) {\n    case EventOrGroupType.ERROR: {\n      if (customTitle) {\n        return {\n          title: customTitle,\n          subtitle: culprit,\n          treeLabel: undefined,\n        };\n      }\n\n      const displayTitleWithTreeLabel =\n        features.includes('grouping-title-ui') &&\n        (grouping ||\n          isNativePlatform(event.platform) ||\n          isMobilePlatform(event.platform));\n\n      if (displayTitleWithTreeLabel) {\n        return {\n          subtitle: culprit,\n          ...computeTitleWithTreeLabel(metadata),\n        };\n      }\n\n      return {\n        subtitle: culprit,\n        title: metadata.type || metadata.function || '<unknown>',\n        treeLabel: undefined,\n      };\n    }\n    case EventOrGroupType.CSP:\n      return {\n        title: customTitle ?? metadata.directive ?? '',\n        subtitle: metadata.uri ?? '',\n        treeLabel: undefined,\n      };\n    case EventOrGroupType.EXPECTCT:\n    case EventOrGroupType.EXPECTSTAPLE:\n    case EventOrGroupType.HPKP:\n      // Due to a regression some reports did not have message persisted\n      // (https://github.com/getsentry/sentry/pull/19794) so we need to fall\n      // back to the computed title for these.\n      return {\n        title: customTitle ?? (metadata.message || event.title),\n        subtitle: metadata.origin ?? '',\n        treeLabel: undefined,\n      };\n    case EventOrGroupType.DEFAULT:\n      return {\n        title: customTitle ?? metadata.title ?? '',\n        subtitle: '',\n        treeLabel: undefined,\n      };\n    default:\n      return {\n        title: customTitle ?? event.title,\n        subtitle: '',\n        treeLabel: undefined,\n      };\n  }\n}\n\n/**\n * Returns a short eventId with only 8 characters\n */\nexport function getShortEventId(eventId: string) {\n  return eventId.substring(0, 8);\n}\n","import {mobile} from 'sentry/data/platformCategories';\n\nexport function isNativePlatform(platform: string | undefined) {\n  switch (platform) {\n    case 'cocoa':\n    case 'objc':\n    case 'native':\n    case 'swift':\n    case 'c':\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isMobilePlatform(platform: string | undefined) {\n  if (!platform) {\n    return false;\n  }\n\n  return ([...mobile] as string[]).includes(platform);\n}\n","import {createContext} from 'react';\n\nimport {Organization} from 'sentry/types';\n\nexport const OrganizationContext = createContext<Organization | null>(null);\n"],"names":["CommandPalette","Body","theme","useTheme","useEffect","analytics","css","injectedCss","entryPoint","minSearch","maxResults","dropdownClassName","border","renderInput","getInputProps","InputWrapper","StyledInput","autoFocus","type","placeholder","t","modalCss","space","Input","getDefaultSelection","projects","environments","datetime","start","end","period","DEFAULT_STATS_PERIOD","utc","extractSelectionParameters","query","pickBy","pick","Object","values","URL_PARAM","identity","isSelectionEqual","selection","other","isEqual","toString","Truncate","Component","isExpanded","value","maxLength","this","props","length","setState","state","render","className","leftTrim","trimRegex","minLength","expandable","expandDirection","isTruncated","shortValue","slicedValue","slice","valueIndex","search","matches","match","lastIndex","lastIndexOf","Wrapper","onMouseOver","onFocus","undefined","onMouseOut","onBlur","FullValue","expanded","p","background","innerBorder","zIndex","truncationFullValue","route","title","fields","name","label","help","showReturnButton","allEventMap","growthEventMap","issueEventMap","performanceEventMap","dashboardsEventMap","discoverEventMap","workflowEventMap","searchEventMap","settingsEventMap","coreUIEventMap","samplingEventMap","makeAnalyticsFunction","isTombstone","maybe","hasOwnProperty","getMessage","event","culprit","metadata","EventOrGroupType","message","getLocation","isNativePlatform","platform","filename","getTreeLabelPartDetails","part","function","package","filebase","classbase","computeTitleWithTreeLabel","current_tree_label","finest_tree_label","treeLabel","formattedTreeLabel","map","labelPart","join","getTitle","features","grouping","customTitle","includes","subtitle","isMobilePlatform","directive","uri","origin","getShortEventId","eventId","substring","mobile","OrganizationContext","createContext"],"sourceRoot":""}