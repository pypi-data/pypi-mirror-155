Metadata-Version: 2.1
Name: haas-python-rgb_led
Version: 0.0.6
Summary: This is rgb_led driver for HaaS Python. HaaS Python is forked from micropython.
Home-page: https://haas.iot.aliyun.com/?from=corp
Author: HaaS Python
Author-email: yinsuo.mys@alibaba-inc.com
License: Apache License, Version 2.0
Project-URL: Source Code, https://github.com/alibaba/AliOS-Things
Project-URL: Bug Tracker, https://github.com/alibaba/AliOS-Things/issues
Project-URL: Documentation, https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b16145223.0.0.81b460b1lzwYKw#/?from=corp
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: Implementation :: MicroPython
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
License-File: LICENSE


## HaaS Python介绍
HaaS Python是阿里云IoT团队最新研发的一套低代码编程框架，兼容MicroPython编程规范，依托HaaS平台软硬件积木提供AI、支付、蓝牙配网、云连接、UI等物联网场景常用的能力，从而解决了物联网应用开发难的问题。有了Python轻应用框架，物联网编程不再局限于专业软件开发人员，一般的技术员也可以快速实现复杂的物联网需求。
更多HaaS Python介绍和开发资料见[HaaS Python官网](https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b16145223.0.0.595660b1dZDX71#/?from=corp),[创意案例](https://haas.iot.aliyun.com/solution?from=crop), [硬件积木](https://haas.iot.aliyun.com/solution/hardware?from=corp)

HaaS Python is a set of low-code programming frameworks newly developed by Alibaba Cloud IoT team. It is compatible with MicroPython programming specifications. It relies on the hardware and software building blocks of the HaaS platform to provide capabilities commonly used in IoT scenarios such as AI, payment, Bluetooth network configuration, cloud connection, and UI. Solve the difficult problem of IoT application development. With the Python light application framework, IoT programming is no longer limited to professional software developers, and general technicians can quickly implement complex IoT requirements.
For more HaaS Python introduction and development materials, see [HaaS Python official website](https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b16145223.0.0.595660b1dZDX71#/?from=corp), [Creative Case](https://haas.iot.aliyun.com/solution?from=crop), [Hardware Building Blocks](https://haas.iot.aliyun.com/solution/hardware?from=corp)

## 安装方法
* 在[HaaS Python官网](https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b50127119.0.0.4e1260b1ebMIf1#/)下载开发板对应的固件，并完成固件烧录

Download the firmware corresponding to the development board at [HaaS Python website](https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b50127119.0.0.4e1260b1ebMIf1#/) and complete the firmware burning

* 在开发板上运行以下命令完成安装和使用,如果您在使用过程中遇到问题，欢迎在[github上向我们提交issue](https://github.com/alibaba/AliOS-Things/issues)，我们的工程师会及时解答

Run the following commands on the development board to complete the installation and use. If you encounter problems during use, please submit an issue to us on [github](https://github.com/alibaba/AliOS-Things/issues), Our engineers will answer in time
```
import upip
upip.install("haas-python-rgb_led")
import haas-python-rgb_led
```
# RgbLed - RGB三色LED驱动

## 一、产品简介
&emsp;&emsp;
RGB三色LED是一种简单的三色集成的LED。红、绿、蓝三种颜色可以使用对应的三个引脚进行独立控制。

<div align="center">
<img src=./../../docs/images/RGBLED.jpeg  width=30%/>
</div>

引脚定义

* R：红色灯引脚
* G：绿色灯引脚
* B：蓝色灯引脚
* GND：电源地

## 二、软件接口

RGB LED HaaS Python驱动：[下载地址](https://github.com/alibaba/AliOS-Things/tree/master/haas_lib_bundles/python/libraries/rgb_led)
<br>

## RgbLed(pwmRObj, pwmGObj, pwmBObj) - 创建 RGB LED 驱动对象
* 函数原型：
> rgbLedObj = RgbLed(pwmRObj, pwmGObj, pwmBObj)

* 参数说明：

| 参数    | 类型 | 必选参数？ | 说明                                                            |
| ------- | ---- | :--------: | --------------------------------------------------------------- |
| pwmRObj | PWM  |     是     | 连接红色LED的引脚PWM对象，调用此函数前需确保pwmRObj对象已被open |
| pwmGObj | PWM  |     是     | 连接绿色LED的引脚PWM对象，调用此函数前需确保pwmRObj对象已被open |
| pwmBObj | PWM  |     是     | 连接蓝色LED的引脚PWM对象，调用此函数前需确保pwmRObj对象已被open |

* 返回值：
若RgbLed对象创建成功，返回RgbLed对象；若RgbLed对象创建失败，抛出相关Exception

* 示例代码：

```python
from driver import PWM
from RgbLed import RgbLed

rgbR = PWM()
rgbR.open("rgbR")

rgbG = PWM()
rgbG.open("rgbG")

rgbB = PWM()
rgbB.open("rgbB")

led = RgbLed(rgbR, rgbG, rgbB)

print("RgbLed inited!")
```

* 输出：
```
RgbLed inited!
```

## setColor - 设置 RGB LED 颜色

* 函数功能：
设置 RGB LED 颜色

* 函数原型：
> RgbLed.setColor(color)

* 参数说明：
color 为 RGB888 格式的色值，接受两种形式的入参

其一为长度为3的tuple类型，如
```python
RgbLed.setColor((255, 255, 255))
```
其中 (255, 255, 255) 表示白色；

其二为int类型，如
```python
RgbLed.setColor(0xFFFFFF)
```
其中 0xFFFFFF 表示白色；

* 返回值：
成功无返回；失败抛出Exception

## 三、使用实例

* board.json
```json
{
    "name": "board-name",
    "version": "1.0.0",
    "io": {
        "rgbR": {
            "type": "PWM",
            "port": 5
        },
        "rgbG": {
            "type": "PWM",
            "port": 18
        },
        "rgbB": {
            "type": "PWM",
            "port": 19
        }
    },
    "debugLevel": "ERROR",
    "repl": "disable"
}
```

```python
# Python代码
import utime
from driver import PWM
from rgbLed import RgbLed

if __name__ == '__main__':
    rgbR = PWM()
    rgbR.open("rgbR")

    rgbG = PWM()
    rgbG.open("rgbG")

    rgbB = PWM()
    rgbB.open("rgbB")

    led = RgbLed(rgbR, rgbG, rgbB)

    colorHex = 0x000000

    while True:
        colorHex = (colorHex + 1) if colorHex <= 0xffffff else 0
        led.setColor(colorHex)
        utime.sleep_ms(1)
```

## 参考文献及购买链接
[1] [购买链接](https://detail.tmall.com/item.htm?id=548418198148)
