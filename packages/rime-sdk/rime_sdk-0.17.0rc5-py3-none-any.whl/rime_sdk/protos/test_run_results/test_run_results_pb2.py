# autogenerated
# mypy: ignore-errors
# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protos/test_run_results/test_run_results.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from rime_sdk.protos.annotations.security import sanitization_pb2 as protos_dot_annotations_dot_security_dot_sanitization__pb2
from rime_sdk.protos.google.api import annotations_pb2 as protos_dot_google_dot_api_dot_annotations__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from rime_sdk.protos.common import common_pb2 as protos_dot_common_dot_common__pb2
from rime_sdk.protos.result_synthesizer import result_message_pb2 as protos_dot_result__synthesizer_dot_result__message__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n.protos/test_run_results/test_run_results.proto\x12\rtestrunresult\x1a.protos/annotations/security/sanitization.proto\x1a#protos/google/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1aprotos/common/common.proto\x1a.protos/result_synthesizer/result_message.proto\"(\n\x11GetTestRunRequest\x12\x13\n\x0btest_run_id\x18\x01 \x01(\t\">\n\x12GetTestRunResponse\x12(\n\x08test_run\x18\x01 \x01(\x0b\x32\x16.testrunresult.TestRun\"R\n\x13ListTestRunsRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x18\n\npage_token\x18\x02 \x01(\tB\x04\x98\xbb\x1c\x01\x12\r\n\x05limit\x18\x03 \x01(\x03\"`\n\x14ListTestRunsResponse\x12)\n\ttest_runs\x18\x01 \x03(\x0b\x32\x16.testrunresult.TestRun\x12\x1d\n\x0fnext_page_token\x18\x02 \x01(\tB\x04\x98\xbb\x1c\x01\"[\n\x17ListBatchResultsRequest\x12\x13\n\x0btest_run_id\x18\x01 \x01(\t\x12\x18\n\npage_token\x18\x02 \x01(\tB\x04\x98\xbb\x1c\x01\x12\x11\n\tpage_size\x18\x03 \x01(\x03\"o\n\x18ListBatchResultsResponse\x12\x34\n\x0ctest_batches\x18\x01 \x03(\x0b\x32\x1e.testrunresult.TestBatchResult\x12\x1d\n\x0fnext_page_token\x18\x02 \x01(\tB\x04\x98\xbb\x1c\x01\"?\n\x15GetBatchResultRequest\x12\x13\n\x0btest_run_id\x18\x01 \x01(\t\x12\x11\n\ttest_type\x18\x02 \x01(\t\"L\n\x16GetBatchResultResponse\x12\x32\n\ntest_batch\x18\x01 \x01(\x0b\x32\x1e.testrunresult.TestBatchResult\"]\n\x19ListFeatureResultsRequest\x12\x13\n\x0btest_run_id\x18\x01 \x01(\t\x12\x18\n\npage_token\x18\x02 \x01(\tB\x04\x98\xbb\x1c\x01\x12\x11\n\tpage_size\x18\x03 \x01(\x03\"v\n\x1aListFeatureResultsResponse\x12\x39\n\x0f\x66\x65\x61ture_results\x18\x01 \x03(\x0b\x32 .testrunresult.TestFeatureResult\x12\x1d\n\x0fnext_page_token\x18\x02 \x01(\tB\x04\x98\xbb\x1c\x01\"l\n\x14ListTestCasesRequest\x12\x13\n\x0btest_run_id\x18\x01 \x01(\t\x12\x12\n\ntest_types\x18\x02 \x03(\t\x12\x18\n\npage_token\x18\x03 \x01(\tB\x04\x98\xbb\x1c\x01\x12\x11\n\tpage_size\x18\x04 \x01(\x03\"c\n\x15ListTestCasesResponse\x12+\n\ntest_cases\x18\x01 \x03(\x0b\x32\x17.testrunresult.TestCase\x12\x1d\n\x0fnext_page_token\x18\x02 \x01(\tB\x04\x98\xbb\x1c\x01\"_\n\x13ResultSummaryCounts\x12\r\n\x05total\x18\x01 \x01(\x03\x12\x0c\n\x04pass\x18\x02 \x01(\x03\x12\x0f\n\x07warning\x18\x03 \x01(\x03\x12\x0c\n\x04\x66\x61il\x18\x04 \x01(\x03\x12\x0c\n\x04skip\x18\x05 \x01(\x03\"\x14\n\x12\x41\x62normalInputStats\"(\n\tDriftStat\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x01\"\xf4\x0b\n\x07TestRun\x12\x31\n\x08metadata\x18\x01 \x01(\x0b\x32\x1f.testrunresult.TestRun.Metadata\x12?\n\x10\x64\x61ta_source_info\x18\x02 \x01(\x0b\x32%.testrunresult.TestRun.DataSourceInfo\x12\x43\n\x11model_source_info\x18\x03 \x01(\x0b\x32&.testrunresult.TestRun.ModelSourceInfoH\x00\x12/\n\x07metrics\x18\x04 \x01(\x0b\x32\x1e.testrunresult.TestRun.Metrics\x1a\xa4\x02\n\x08Metadata\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0e\n\x06job_id\x18\x03 \x01(\t\x12\x12\n\nproject_id\x18\x04 \x01(\t\x12$\n\x0ctesting_type\x18\x05 \x01(\x0e\x32\x0e.rime.TestType\x12!\n\tdata_type\x18\x06 \x01(\x0e\x32\x0e.rime.DataType\x12%\n\nmodel_task\x18\x07 \x01(\x0e\x32\x0f.rime.ModelTaskH\x00\x12/\n\x0bupload_time\x18\x08 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\"\n\x0bweb_app_url\x18\t \x01(\x0b\x32\r.rime.SafeURLB\x15\n\x13optional_model_task\x1a\xc9\x01\n\x0e\x44\x61taSourceInfo\x12=\n\x03ref\x18\x01 \x01(\x0b\x32\x30.testrunresult.TestRun.DataSourceInfo.DataSource\x12>\n\x04\x65val\x18\x02 \x01(\x0b\x32\x30.testrunresult.TestRun.DataSourceInfo.DataSource\x1a\x38\n\nDataSource\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x10\n\x08\x66\x65\x61tures\x18\x03 \x03(\t\x1a+\n\x0fModelSourceInfo\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x1a\xc0\x05\n\x07Metrics\x12\x41\n\nmodel_perf\x18\x01 \x03(\x0b\x32-.testrunresult.TestRun.Metrics.ModelPerfEntry\x12\x1c\n\x12\x61verage_prediction\x18\x02 \x01(\x01H\x00\x12\x12\n\nnum_inputs\x18\x03 \x01(\x03\x12\x1a\n\x12num_failing_inputs\x18\x04 \x01(\x03\x12\x17\n\x0f\x64uration_millis\x18\x05 \x01(\x01\x12\x46\n\x0fseverity_counts\x18\x06 \x01(\x0b\x32-.testrunresult.TestRun.Metrics.SeverityCounts\x12:\n\x0esummary_counts\x18\x07 \x01(\x0b\x32\".testrunresult.ResultSummaryCounts\x12\x18\n\x10robustness_score\x18\x08 \x01(\x01\x1a\xa0\x01\n\x0fModelPerfMetric\x12\x14\n\nref_metric\x18\x01 \x01(\x01H\x00\x12\x15\n\x0b\x65val_metric\x18\x02 \x01(\x01H\x01\x12\x17\n\x0fsubset_severity\x18\x03 \x01(\t\x12\x18\n\x10subset_pass_rate\x18\x04 \x01(\tB\x15\n\x13optional_ref_metricB\x16\n\x14optional_eval_metric\x1aI\n\x0eSeverityCounts\x12\x0c\n\x04none\x18\x01 \x01(\x03\x12\x0b\n\x03low\x18\x02 \x01(\x03\x12\x0e\n\x06medium\x18\x03 \x01(\x03\x12\x0c\n\x04high\x18\x04 \x01(\x03\x1a`\n\x0eModelPerfEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12=\n\x05value\x18\x02 \x01(\x0b\x32..testrunresult.TestRun.Metrics.ModelPerfMetric:\x02\x38\x01\x42\x1d\n\x1boptional_average_predictionB\x1c\n\x1aoptional_model_source_info\"\x91\x02\n\x0fTestBatchResult\x12\x13\n\x0btest_run_id\x18\x01 \x01(\t\x12\x11\n\ttest_type\x18\x02 \x01(\t\x12\x11\n\ttest_name\x18\x03 \x01(\t\x12\x19\n\x0b\x64\x65scription\x18\x04 \x01(\tB\x04\x98\xbb\x1c\x03\x12\x10\n\x08\x63\x61tegory\x18\x05 \x01(\t\x12\x1a\n\x12\x64uration_in_millis\x18\x06 \x01(\x03\x12$\n\x08severity\x18\x07 \x01(\x0e\x32\x12.rime.TestSeverity\x12:\n\x0esummary_counts\x18\x08 \x01(\x0b\x32\".testrunresult.ResultSummaryCounts\x12\x18\n\x10\x66\x61iling_features\x18\t \x03(\t\"\xe9\x02\n\x11TestFeatureResult\x12\x12\n\nfeature_id\x18\x01 \x01(\t\x12\x14\n\x0c\x66\x65\x61ture_name\x18\x02 \x01(\t\x12\'\n\x0c\x66\x65\x61ture_type\x18\x03 \x01(\x0e\x32\x11.rime.FeatureType\x12$\n\x08severity\x18\x04 \x01(\x0e\x32\x12.rime.TestSeverity\x12:\n\x0esummary_counts\x18\x05 \x01(\x0b\x32\".testrunresult.ResultSummaryCounts\x12\x15\n\rfailing_tests\x18\x06 \x03(\t\x12?\n\x14\x61\x62normal_input_stats\x18\x07 \x01(\x0b\x32!.testrunresult.AbnormalInputStats\x12\x31\n\x0f\x64rift_statistic\x18\x08 \x01(\x0b\x32\x18.testrunresult.DriftStat\x12\x14\n\x0cmodel_impact\x18\t \x01(\x01\"\xe9\x01\n\x08TestCase\x12\x13\n\x0btest_run_id\x18\x02 \x01(\t\x12\x10\n\x08\x66\x65\x61tures\x18\x03 \x03(\t\x12\x17\n\x0ftest_batch_type\x18\x04 \x01(\t\x12$\n\x06status\x18\x05 \x01(\x0e\x32\x14.rime.TestCaseStatus\x12$\n\x08severity\x18\x06 \x01(\x0e\x32\x12.rime.TestSeverity\x12\x18\n\x10importance_score\x18\x07 \x01(\x01\x12\x10\n\x08\x63\x61tegory\x18\x08 \x01(\t\x12%\n\x07metrics\x18\t \x03(\x0b\x32\x14.rime.TestCaseMetric2\x9e\x05\n\rResultsReader\x12v\n\nGetTestRun\x12 .testrunresult.GetTestRunRequest\x1a!.testrunresult.GetTestRunResponse\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/v1/test-runs/{test_run_id}\x12Y\n\x0cListTestRuns\x12\".testrunresult.ListTestRunsRequest\x1a#.testrunresult.ListTestRunsResponse\"\x00\x12]\n\x0eGetBatchResult\x12$.testrunresult.GetBatchResultRequest\x1a%.testrunresult.GetBatchResultResponse\x12\x63\n\x10ListBatchResults\x12&.testrunresult.ListBatchResultsRequest\x1a\'.testrunresult.ListBatchResultsResponse\x12i\n\x12ListFeatureResults\x12(.testrunresult.ListFeatureResultsRequest\x1a).testrunresult.ListFeatureResultsResponse\x12\x8a\x01\n\rListTestCases\x12#.testrunresult.ListTestCasesRequest\x1a$.testrunresult.ListTestCasesResponse\".\x82\xd3\xe4\x93\x02(\x12&/v1/test-runs/{test_run_id}/test-casesB\x1fZ\x1dri/_gen/protos/testrunresultsb\x06proto3')



_GETTESTRUNREQUEST = DESCRIPTOR.message_types_by_name['GetTestRunRequest']
_GETTESTRUNRESPONSE = DESCRIPTOR.message_types_by_name['GetTestRunResponse']
_LISTTESTRUNSREQUEST = DESCRIPTOR.message_types_by_name['ListTestRunsRequest']
_LISTTESTRUNSRESPONSE = DESCRIPTOR.message_types_by_name['ListTestRunsResponse']
_LISTBATCHRESULTSREQUEST = DESCRIPTOR.message_types_by_name['ListBatchResultsRequest']
_LISTBATCHRESULTSRESPONSE = DESCRIPTOR.message_types_by_name['ListBatchResultsResponse']
_GETBATCHRESULTREQUEST = DESCRIPTOR.message_types_by_name['GetBatchResultRequest']
_GETBATCHRESULTRESPONSE = DESCRIPTOR.message_types_by_name['GetBatchResultResponse']
_LISTFEATURERESULTSREQUEST = DESCRIPTOR.message_types_by_name['ListFeatureResultsRequest']
_LISTFEATURERESULTSRESPONSE = DESCRIPTOR.message_types_by_name['ListFeatureResultsResponse']
_LISTTESTCASESREQUEST = DESCRIPTOR.message_types_by_name['ListTestCasesRequest']
_LISTTESTCASESRESPONSE = DESCRIPTOR.message_types_by_name['ListTestCasesResponse']
_RESULTSUMMARYCOUNTS = DESCRIPTOR.message_types_by_name['ResultSummaryCounts']
_ABNORMALINPUTSTATS = DESCRIPTOR.message_types_by_name['AbnormalInputStats']
_DRIFTSTAT = DESCRIPTOR.message_types_by_name['DriftStat']
_TESTRUN = DESCRIPTOR.message_types_by_name['TestRun']
_TESTRUN_METADATA = _TESTRUN.nested_types_by_name['Metadata']
_TESTRUN_DATASOURCEINFO = _TESTRUN.nested_types_by_name['DataSourceInfo']
_TESTRUN_DATASOURCEINFO_DATASOURCE = _TESTRUN_DATASOURCEINFO.nested_types_by_name['DataSource']
_TESTRUN_MODELSOURCEINFO = _TESTRUN.nested_types_by_name['ModelSourceInfo']
_TESTRUN_METRICS = _TESTRUN.nested_types_by_name['Metrics']
_TESTRUN_METRICS_MODELPERFMETRIC = _TESTRUN_METRICS.nested_types_by_name['ModelPerfMetric']
_TESTRUN_METRICS_SEVERITYCOUNTS = _TESTRUN_METRICS.nested_types_by_name['SeverityCounts']
_TESTRUN_METRICS_MODELPERFENTRY = _TESTRUN_METRICS.nested_types_by_name['ModelPerfEntry']
_TESTBATCHRESULT = DESCRIPTOR.message_types_by_name['TestBatchResult']
_TESTFEATURERESULT = DESCRIPTOR.message_types_by_name['TestFeatureResult']
_TESTCASE = DESCRIPTOR.message_types_by_name['TestCase']
GetTestRunRequest = _reflection.GeneratedProtocolMessageType('GetTestRunRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETTESTRUNREQUEST,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:testrunresult.GetTestRunRequest)
  })
_sym_db.RegisterMessage(GetTestRunRequest)

GetTestRunResponse = _reflection.GeneratedProtocolMessageType('GetTestRunResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETTESTRUNRESPONSE,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:testrunresult.GetTestRunResponse)
  })
_sym_db.RegisterMessage(GetTestRunResponse)

ListTestRunsRequest = _reflection.GeneratedProtocolMessageType('ListTestRunsRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTTESTRUNSREQUEST,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:testrunresult.ListTestRunsRequest)
  })
_sym_db.RegisterMessage(ListTestRunsRequest)

ListTestRunsResponse = _reflection.GeneratedProtocolMessageType('ListTestRunsResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTTESTRUNSRESPONSE,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:testrunresult.ListTestRunsResponse)
  })
_sym_db.RegisterMessage(ListTestRunsResponse)

ListBatchResultsRequest = _reflection.GeneratedProtocolMessageType('ListBatchResultsRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTBATCHRESULTSREQUEST,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:testrunresult.ListBatchResultsRequest)
  })
_sym_db.RegisterMessage(ListBatchResultsRequest)

ListBatchResultsResponse = _reflection.GeneratedProtocolMessageType('ListBatchResultsResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTBATCHRESULTSRESPONSE,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:testrunresult.ListBatchResultsResponse)
  })
_sym_db.RegisterMessage(ListBatchResultsResponse)

GetBatchResultRequest = _reflection.GeneratedProtocolMessageType('GetBatchResultRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETBATCHRESULTREQUEST,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:testrunresult.GetBatchResultRequest)
  })
_sym_db.RegisterMessage(GetBatchResultRequest)

GetBatchResultResponse = _reflection.GeneratedProtocolMessageType('GetBatchResultResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETBATCHRESULTRESPONSE,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:testrunresult.GetBatchResultResponse)
  })
_sym_db.RegisterMessage(GetBatchResultResponse)

ListFeatureResultsRequest = _reflection.GeneratedProtocolMessageType('ListFeatureResultsRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTFEATURERESULTSREQUEST,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:testrunresult.ListFeatureResultsRequest)
  })
_sym_db.RegisterMessage(ListFeatureResultsRequest)

ListFeatureResultsResponse = _reflection.GeneratedProtocolMessageType('ListFeatureResultsResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTFEATURERESULTSRESPONSE,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:testrunresult.ListFeatureResultsResponse)
  })
_sym_db.RegisterMessage(ListFeatureResultsResponse)

ListTestCasesRequest = _reflection.GeneratedProtocolMessageType('ListTestCasesRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTTESTCASESREQUEST,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:testrunresult.ListTestCasesRequest)
  })
_sym_db.RegisterMessage(ListTestCasesRequest)

ListTestCasesResponse = _reflection.GeneratedProtocolMessageType('ListTestCasesResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTTESTCASESRESPONSE,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:testrunresult.ListTestCasesResponse)
  })
_sym_db.RegisterMessage(ListTestCasesResponse)

ResultSummaryCounts = _reflection.GeneratedProtocolMessageType('ResultSummaryCounts', (_message.Message,), {
  'DESCRIPTOR' : _RESULTSUMMARYCOUNTS,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:testrunresult.ResultSummaryCounts)
  })
_sym_db.RegisterMessage(ResultSummaryCounts)

AbnormalInputStats = _reflection.GeneratedProtocolMessageType('AbnormalInputStats', (_message.Message,), {
  'DESCRIPTOR' : _ABNORMALINPUTSTATS,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:testrunresult.AbnormalInputStats)
  })
_sym_db.RegisterMessage(AbnormalInputStats)

DriftStat = _reflection.GeneratedProtocolMessageType('DriftStat', (_message.Message,), {
  'DESCRIPTOR' : _DRIFTSTAT,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:testrunresult.DriftStat)
  })
_sym_db.RegisterMessage(DriftStat)

TestRun = _reflection.GeneratedProtocolMessageType('TestRun', (_message.Message,), {

  'Metadata' : _reflection.GeneratedProtocolMessageType('Metadata', (_message.Message,), {
    'DESCRIPTOR' : _TESTRUN_METADATA,
    '__module__' : 'protos.test_run_results.test_run_results_pb2'
    # @@protoc_insertion_point(class_scope:testrunresult.TestRun.Metadata)
    })
  ,

  'DataSourceInfo' : _reflection.GeneratedProtocolMessageType('DataSourceInfo', (_message.Message,), {

    'DataSource' : _reflection.GeneratedProtocolMessageType('DataSource', (_message.Message,), {
      'DESCRIPTOR' : _TESTRUN_DATASOURCEINFO_DATASOURCE,
      '__module__' : 'protos.test_run_results.test_run_results_pb2'
      # @@protoc_insertion_point(class_scope:testrunresult.TestRun.DataSourceInfo.DataSource)
      })
    ,
    'DESCRIPTOR' : _TESTRUN_DATASOURCEINFO,
    '__module__' : 'protos.test_run_results.test_run_results_pb2'
    # @@protoc_insertion_point(class_scope:testrunresult.TestRun.DataSourceInfo)
    })
  ,

  'ModelSourceInfo' : _reflection.GeneratedProtocolMessageType('ModelSourceInfo', (_message.Message,), {
    'DESCRIPTOR' : _TESTRUN_MODELSOURCEINFO,
    '__module__' : 'protos.test_run_results.test_run_results_pb2'
    # @@protoc_insertion_point(class_scope:testrunresult.TestRun.ModelSourceInfo)
    })
  ,

  'Metrics' : _reflection.GeneratedProtocolMessageType('Metrics', (_message.Message,), {

    'ModelPerfMetric' : _reflection.GeneratedProtocolMessageType('ModelPerfMetric', (_message.Message,), {
      'DESCRIPTOR' : _TESTRUN_METRICS_MODELPERFMETRIC,
      '__module__' : 'protos.test_run_results.test_run_results_pb2'
      # @@protoc_insertion_point(class_scope:testrunresult.TestRun.Metrics.ModelPerfMetric)
      })
    ,

    'SeverityCounts' : _reflection.GeneratedProtocolMessageType('SeverityCounts', (_message.Message,), {
      'DESCRIPTOR' : _TESTRUN_METRICS_SEVERITYCOUNTS,
      '__module__' : 'protos.test_run_results.test_run_results_pb2'
      # @@protoc_insertion_point(class_scope:testrunresult.TestRun.Metrics.SeverityCounts)
      })
    ,

    'ModelPerfEntry' : _reflection.GeneratedProtocolMessageType('ModelPerfEntry', (_message.Message,), {
      'DESCRIPTOR' : _TESTRUN_METRICS_MODELPERFENTRY,
      '__module__' : 'protos.test_run_results.test_run_results_pb2'
      # @@protoc_insertion_point(class_scope:testrunresult.TestRun.Metrics.ModelPerfEntry)
      })
    ,
    'DESCRIPTOR' : _TESTRUN_METRICS,
    '__module__' : 'protos.test_run_results.test_run_results_pb2'
    # @@protoc_insertion_point(class_scope:testrunresult.TestRun.Metrics)
    })
  ,
  'DESCRIPTOR' : _TESTRUN,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:testrunresult.TestRun)
  })
_sym_db.RegisterMessage(TestRun)
_sym_db.RegisterMessage(TestRun.Metadata)
_sym_db.RegisterMessage(TestRun.DataSourceInfo)
_sym_db.RegisterMessage(TestRun.DataSourceInfo.DataSource)
_sym_db.RegisterMessage(TestRun.ModelSourceInfo)
_sym_db.RegisterMessage(TestRun.Metrics)
_sym_db.RegisterMessage(TestRun.Metrics.ModelPerfMetric)
_sym_db.RegisterMessage(TestRun.Metrics.SeverityCounts)
_sym_db.RegisterMessage(TestRun.Metrics.ModelPerfEntry)

TestBatchResult = _reflection.GeneratedProtocolMessageType('TestBatchResult', (_message.Message,), {
  'DESCRIPTOR' : _TESTBATCHRESULT,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:testrunresult.TestBatchResult)
  })
_sym_db.RegisterMessage(TestBatchResult)

TestFeatureResult = _reflection.GeneratedProtocolMessageType('TestFeatureResult', (_message.Message,), {
  'DESCRIPTOR' : _TESTFEATURERESULT,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:testrunresult.TestFeatureResult)
  })
_sym_db.RegisterMessage(TestFeatureResult)

TestCase = _reflection.GeneratedProtocolMessageType('TestCase', (_message.Message,), {
  'DESCRIPTOR' : _TESTCASE,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:testrunresult.TestCase)
  })
_sym_db.RegisterMessage(TestCase)

_RESULTSREADER = DESCRIPTOR.services_by_name['ResultsReader']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z\035ri/_gen/protos/testrunresults'
  _LISTTESTRUNSREQUEST.fields_by_name['page_token']._options = None
  _LISTTESTRUNSREQUEST.fields_by_name['page_token']._serialized_options = b'\230\273\034\001'
  _LISTTESTRUNSRESPONSE.fields_by_name['next_page_token']._options = None
  _LISTTESTRUNSRESPONSE.fields_by_name['next_page_token']._serialized_options = b'\230\273\034\001'
  _LISTBATCHRESULTSREQUEST.fields_by_name['page_token']._options = None
  _LISTBATCHRESULTSREQUEST.fields_by_name['page_token']._serialized_options = b'\230\273\034\001'
  _LISTBATCHRESULTSRESPONSE.fields_by_name['next_page_token']._options = None
  _LISTBATCHRESULTSRESPONSE.fields_by_name['next_page_token']._serialized_options = b'\230\273\034\001'
  _LISTFEATURERESULTSREQUEST.fields_by_name['page_token']._options = None
  _LISTFEATURERESULTSREQUEST.fields_by_name['page_token']._serialized_options = b'\230\273\034\001'
  _LISTFEATURERESULTSRESPONSE.fields_by_name['next_page_token']._options = None
  _LISTFEATURERESULTSRESPONSE.fields_by_name['next_page_token']._serialized_options = b'\230\273\034\001'
  _LISTTESTCASESREQUEST.fields_by_name['page_token']._options = None
  _LISTTESTCASESREQUEST.fields_by_name['page_token']._serialized_options = b'\230\273\034\001'
  _LISTTESTCASESRESPONSE.fields_by_name['next_page_token']._options = None
  _LISTTESTCASESRESPONSE.fields_by_name['next_page_token']._serialized_options = b'\230\273\034\001'
  _TESTRUN_METRICS_MODELPERFENTRY._options = None
  _TESTRUN_METRICS_MODELPERFENTRY._serialized_options = b'8\001'
  _TESTBATCHRESULT.fields_by_name['description']._options = None
  _TESTBATCHRESULT.fields_by_name['description']._serialized_options = b'\230\273\034\003'
  _RESULTSREADER.methods_by_name['GetTestRun']._options = None
  _RESULTSREADER.methods_by_name['GetTestRun']._serialized_options = b'\202\323\344\223\002\035\022\033/v1/test-runs/{test_run_id}'
  _RESULTSREADER.methods_by_name['ListTestCases']._options = None
  _RESULTSREADER.methods_by_name['ListTestCases']._serialized_options = b'\202\323\344\223\002(\022&/v1/test-runs/{test_run_id}/test-cases'
  _GETTESTRUNREQUEST._serialized_start=259
  _GETTESTRUNREQUEST._serialized_end=299
  _GETTESTRUNRESPONSE._serialized_start=301
  _GETTESTRUNRESPONSE._serialized_end=363
  _LISTTESTRUNSREQUEST._serialized_start=365
  _LISTTESTRUNSREQUEST._serialized_end=447
  _LISTTESTRUNSRESPONSE._serialized_start=449
  _LISTTESTRUNSRESPONSE._serialized_end=545
  _LISTBATCHRESULTSREQUEST._serialized_start=547
  _LISTBATCHRESULTSREQUEST._serialized_end=638
  _LISTBATCHRESULTSRESPONSE._serialized_start=640
  _LISTBATCHRESULTSRESPONSE._serialized_end=751
  _GETBATCHRESULTREQUEST._serialized_start=753
  _GETBATCHRESULTREQUEST._serialized_end=816
  _GETBATCHRESULTRESPONSE._serialized_start=818
  _GETBATCHRESULTRESPONSE._serialized_end=894
  _LISTFEATURERESULTSREQUEST._serialized_start=896
  _LISTFEATURERESULTSREQUEST._serialized_end=989
  _LISTFEATURERESULTSRESPONSE._serialized_start=991
  _LISTFEATURERESULTSRESPONSE._serialized_end=1109
  _LISTTESTCASESREQUEST._serialized_start=1111
  _LISTTESTCASESREQUEST._serialized_end=1219
  _LISTTESTCASESRESPONSE._serialized_start=1221
  _LISTTESTCASESRESPONSE._serialized_end=1320
  _RESULTSUMMARYCOUNTS._serialized_start=1322
  _RESULTSUMMARYCOUNTS._serialized_end=1417
  _ABNORMALINPUTSTATS._serialized_start=1419
  _ABNORMALINPUTSTATS._serialized_end=1439
  _DRIFTSTAT._serialized_start=1441
  _DRIFTSTAT._serialized_end=1481
  _TESTRUN._serialized_start=1484
  _TESTRUN._serialized_end=3008
  _TESTRUN_METADATA._serialized_start=1730
  _TESTRUN_METADATA._serialized_end=2022
  _TESTRUN_DATASOURCEINFO._serialized_start=2025
  _TESTRUN_DATASOURCEINFO._serialized_end=2226
  _TESTRUN_DATASOURCEINFO_DATASOURCE._serialized_start=2170
  _TESTRUN_DATASOURCEINFO_DATASOURCE._serialized_end=2226
  _TESTRUN_MODELSOURCEINFO._serialized_start=2228
  _TESTRUN_MODELSOURCEINFO._serialized_end=2271
  _TESTRUN_METRICS._serialized_start=2274
  _TESTRUN_METRICS._serialized_end=2978
  _TESTRUN_METRICS_MODELPERFMETRIC._serialized_start=2614
  _TESTRUN_METRICS_MODELPERFMETRIC._serialized_end=2774
  _TESTRUN_METRICS_SEVERITYCOUNTS._serialized_start=2776
  _TESTRUN_METRICS_SEVERITYCOUNTS._serialized_end=2849
  _TESTRUN_METRICS_MODELPERFENTRY._serialized_start=2851
  _TESTRUN_METRICS_MODELPERFENTRY._serialized_end=2947
  _TESTBATCHRESULT._serialized_start=3011
  _TESTBATCHRESULT._serialized_end=3284
  _TESTFEATURERESULT._serialized_start=3287
  _TESTFEATURERESULT._serialized_end=3648
  _TESTCASE._serialized_start=3651
  _TESTCASE._serialized_end=3884
  _RESULTSREADER._serialized_start=3887
  _RESULTSREADER._serialized_end=4557
# @@protoc_insertion_point(module_scope)
