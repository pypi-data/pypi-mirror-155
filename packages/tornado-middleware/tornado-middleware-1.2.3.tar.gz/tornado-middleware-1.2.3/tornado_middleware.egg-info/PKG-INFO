Metadata-Version: 2.1
Name: tornado-middleware
Version: 1.2.3
Summary: Middleware support for Tornado Framework
Home-page: https://gitlab.com/everest-code/libraries/tornado-middlewares
Author: Sebastian Gaviria Tangarife
Author-email: sgt.911@outlook.com
Project-URL: Documentation, https://everest-code.gitlab.io/libraries/tornado-middlewares/
Project-URL: Bug Tracker, https://gitlab.com/everest-code/libraries/tornado-middlewares/-/issues
Project-URL: Source, https://gitlab.com/everest-code/libraries/tornado-middlewares
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Operating System :: OS Independent
Classifier: Environment :: Web Environment
Classifier: Framework :: AsyncIO
Classifier: Topic :: Internet :: WWW/HTTP :: HTTP Servers
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE

# Tornado Middlewares

Middleware support for Tornado Framework

## Install
```bash
pip install tornado-middleware
```

## Example
Create a simple middleware on `RequestHandler` class.

```python
from tornado_middleware import MiddlewareHandler

class IndexHandler(MiddlewareHandler):
    async def middleware_echo(self, next):
        print("Middleware triggered")
        await next()

    def get(self):
        print("Function triggered")
        self.set_status(200)
        self.finish("<html><body><h1>Hello Middleware</h1></body></html>")
```

Create a separately middleware

```python
from tornado_middleware import MiddlewareHandler
from tornado.web import RequestHandler

class EchoMiddleware(MiddlewareHandler):
    async def middleware_echo(self, next):
        print("Middleware triggered")
        await next()

class IndexHandler(EchoMiddleware, RequestHandler):
    def get(self):
        print("Function triggered")
        self.set_status(200)
        self.finish("<html><body><h1>Hello Middleware</h1></body></html>")
```
